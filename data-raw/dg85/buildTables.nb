(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    391254,       7260]
NotebookOptionsPosition[    387373,       7193]
NotebookOutlinePosition[    387777,       7209]
CellTagsIndexPosition[    387734,       7206]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["getCylinderFunctionRoots()", "Subsubsection",ExpressionUUID->"cb6bf3fb-70de-4521-9a14-d9e1ec5f8cb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "getCylinderFunctionRoots", ",", " ", "$InterpolatingFunctionsArray", ",",
      " ", "$CylinderFunctionRootsInitialized"}], "]"}], ";"}], " "}]], "Code",
 CellChangeTimes->{
  3.872290645540254*^9, {3.8723223517550597`*^9, 3.8723223602702055`*^9}},
 FormatType->"InputForm",
 CellLabel->"In[9]:=",ExpressionUUID->"3c890184-f4a1-4802-b43e-eadddc4c521f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Roots", " ", "of", " ", "Cylinder", " ", 
    RowBox[{"equations", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"From", ".", " ", "Dakoulas"}], ",", " ", 
    RowBox[{"Gazetas", " ", "1985"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Author", ":", " ", 
    RowBox[{"Alejandro", " ", "Verri", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"averri", "@", "fi"}], ".", "uba", ".", "ar"}], ")"}], " ", 
     "Date"}], ":", " ", "2009"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8723335996032014`*^9, 
  3.872333705757702*^9}},ExpressionUUID->"02ff297b-f86e-4701-a52a-\
d15772083f40"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"FindRoot", "::", "lstol"}], "]"}], ";"}]}], "Code",
 CellLabel->"In[10]:=",ExpressionUUID->"1bb98857-7a76-42f3-bd04-083915d1a8d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getCylinderFunctionRoots", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"m_", "?", "NumericQ"}], " ", "/;", " ", 
      RowBox[{
       RowBox[{"m", " ", ">=", " ", "0"}], " ", "&&", " ", 
       RowBox[{"m", " ", "<", " ", "1"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[Lambda]_", "?", "NumericQ"}], " ", "/;", " ", 
      RowBox[{
       RowBox[{"\[Lambda]", " ", ">=", " ", "0"}], " ", "&&", " ", 
       RowBox[{"\[Lambda]", " ", "<=", " ", "0.5"}]}]}], ",", " ", 
     RowBox[{"n_Integer", " ", "/;", " ", 
      RowBox[{
       RowBox[{"n", " ", ">=", " ", "1"}], " ", "&&", " ", 
       RowBox[{"n", " ", "<=", " ", "8"}]}]}]}], "]"}], " ", ":=", "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "an", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"ValueQ", "[", "$CylinderFunctionRootsInitialized", "]"}]}], 
        ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"$InterpolatingFunctionsArray", " ", "=", " ", 
          RowBox[{"getCylinderFunctionRoots", "[", "]"}]}], ";"}]}], "\n", 
       "\t\t", "]"}], ";", "\n", "\t\t", 
      RowBox[{"an", " ", "=", " ", 
       RowBox[{
        RowBox[{"$InterpolatingFunctionsArray", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "[", 
        RowBox[{"m", ",", " ", "\[Lambda]"}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"Return", "[", "an", "]"}], ";"}]}], "\n", "\t", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.8722924826744537`*^9, 3.8722924843404393`*^9}, {
  3.872292679188858*^9, 3.8722926853931227`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"b9301123-d22e-4764-9949-2857da0934a8"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"getCylinderFunctionRoots", "[", 
     RowBox[{"m_Around", ",", "\[Lambda]_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Mu]m", "=", 
         RowBox[{"m", "[", "\"\<Value\>\"", "]"}]}], ",", 
        RowBox[{"\[Delta]m", "=", 
         RowBox[{"m", "[", "\"\<Uncertainty\>\"", "]"}]}]}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"Return", "[", 
        RowBox[{"IntervalToAround", "[", 
         RowBox[{
          RowBox[{"getCylinderFunctionRoots", "[", 
           RowBox[{
            RowBox[{"\[Mu]m", "-", "\[Delta]m"}], ",", "\[Lambda]", ",", 
            "n"}], "]"}], ",", 
          RowBox[{"getCylinderFunctionRoots", "[", 
           RowBox[{
            RowBox[{"\[Mu]m", "+", "\[Delta]m"}], ",", "\[Lambda]", ",", 
            "n"}], "]"}]}], "]"}], "]"}], ";"}]}], "\n", "]"}]}], ";"}], 
  "*)"}]], "Code",
 CellLabel->"In[13]:=",ExpressionUUID->"2ccf354c-72bf-42a0-8812-e07831116f86"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getCylinderFunctionRoots", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"m_", "?", "NumericQ"}], " ", "/;", " ", 
      RowBox[{
       RowBox[{"m", " ", ">=", " ", "0"}], " ", "&&", " ", 
       RowBox[{"m", " ", "<", " ", "1"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[Lambda]_", "?", "NumericQ"}], " ", "/;", " ", 
      RowBox[{
       RowBox[{"\[Lambda]", " ", ">=", " ", "0"}], " ", "&&", " ", 
       RowBox[{"\[Lambda]", " ", "<=", " ", "0.5"}]}]}]}], "]"}], " ", ":=", 
   "\n", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", " ", "an"}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"ValueQ", "[", "$CylinderFunctionRootsInitialized", "]"}]}], 
        ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"$InterpolatingFunctionsArray", " ", "=", " ", 
          RowBox[{"getCylinderFunctionRoots", "[", "]"}]}], ";"}]}], "\n", 
       "\t\t", "]"}], ";", "\n", "\t\t", 
      RowBox[{"an", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"$InterpolatingFunctionsArray", "[", 
           RowBox[{"[", "n", "]"}], "]"}], "[", 
          RowBox[{"m", ",", " ", "\[Lambda]"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"n", ",", " ", "1", ",", " ", "8"}], "}"}]}], "]"}]}], ";", 
      "\n", "\t\t", 
      RowBox[{"Return", "[", "an", "]"}], ";"}]}], "\n", "\t", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.872291662230714*^9, 3.872291702966983*^9}, {
  3.8722918310884285`*^9, 3.872291847898751*^9}, {3.8722921645887547`*^9, 
  3.872292176511323*^9}, {3.8722924974689894`*^9, 3.872292498260295*^9}, {
  3.8722926575423555`*^9, 3.872292669341827*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"8850e745-28f1-405e-8185-c31a4c4522eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getCylinderFunctionRoots", "[", "]"}], " ", ":=", "\n", "  ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "An", ",", " ", "an", ",", " ", "i", ",", " ", "j", ",", " ", "n", ",", 
       " ", "\n", "  ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"L", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", " ", "0.005", ",", "0.01", ",", " ", "0.015", ",", 
            "0.02", ",", "0.025", ",", "0.03", ",", " ", "0.035", ",", "0.04",
             ",", "0.045", ",", "0.05", ",", " ", "0.06", ",", "0.07", ",", 
            "0.08", ",", "0.09", ",", "0.1", ",", " ", "0.11", ",", "0.12", 
            ",", " ", "0.13", ",", "0.14", ",", "0.15", ",", "0.17", ",", 
            "0.18", ",", " ", "0.19", ",", "0.2", ",", " ", "0.225", ",", " ",
             "0.25", ",", " ", "0.275", ",", " ", "0.3", ",", " ", "0.325", 
            ",", " ", "0.35", ",", " ", "0.375", ",", " ", "0.4", ",", " ", 
            "0.425", ",", " ", "0.45", ",", " ", "0.475", ",", " ", "0.5"}], 
           "}"}]}], ","}], "*)"}], " ", "\n", " ", 
       RowBox[{"L", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"\[Lambda]value", ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]value", ",", " ", "0", ",", " ", 
            RowBox[{"1", " ", "/", " ", "2"}], ",", " ", "0.01"}], "}"}]}], 
         "]"}]}], ",", "\n", "  ", 
       RowBox[{"Lr", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"\[Lambda]value", ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]value", ",", " ", "0.005", ",", " ", 
            RowBox[{"1", "/", "2"}], " ", ",", " ", "0.01"}], "}"}]}], 
         "]"}]}], ",", "\n", " ", "\n", "  ", 
       RowBox[{"M", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"mvalue", ",", " ", 
          RowBox[{"{", 
           RowBox[{"mvalue", ",", "0.0", ",", "0.96", ",", "0.02"}], "}"}]}], 
         "]"}]}], ",", "\n", "   ", 
       RowBox[{"Mr", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"mvalue", ",", " ", 
          RowBox[{"{", 
           RowBox[{"mvalue", ",", "0.01", ",", "0.95", ",", "0.02"}], "}"}]}],
          "]"}]}], ",", " ", "\n", " ", "\n", "  ", "m", ",", " ", "DataSet", 
       ",", " ", "f", ",", " ", "\[Lambda]", ",", " ", "a", ",", " ", "q", 
       ",", " ", "root", ",", " ", "equation", ",", " ", "guess", ",", " ", 
       RowBox[{"NF", " ", "=", " ", "8"}], ",", " ", 
       RowBox[{"\[CapitalDelta]NF", " ", "=", " ", "4"}], ",", " ", "Nm", ",",
        " ", "N\[Lambda]", ",", " ", "NS", ",", " ", "NL"}], "}"}], ",", "\n",
      "    ", 
     RowBox[{
      RowBox[{"Off", "[", 
       RowBox[{"InterpolatingFunction", "::", "dmval"}], "]"}], ";", "\n", 
      "    ", 
      RowBox[{"Off", "[", 
       RowBox[{"FindRoot", "::", "lstol"}], "]"}], ";", "\n", "    ", 
      RowBox[{"NL", " ", "=", " ", 
       RowBox[{"Length", "[", "L", "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"Base", " ", "points"}], "*)"}], "\n", "    ", 
      RowBox[{"NS", " ", "=", " ", 
       RowBox[{"Length", "[", "M", "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"Base", " ", "Points"}], "*)"}], "\n", "    ", 
      RowBox[{"Nm", " ", "=", " ", 
       RowBox[{"Length", "[", "Mr", "]"}]}], ";", 
      RowBox[{"(*", "*)"}], "\n", "    ", 
      RowBox[{"N\[Lambda]", " ", "=", " ", 
       RowBox[{"Length", "[", "Lr", "]"}]}], ";", 
      RowBox[{"(*", "*)"}], "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}], "  ", "*)"}], "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"An", "[", "]"}], ":", " ", 
        RowBox[{
        "Characteristics", " ", "roots", " ", "for", " ", "base", " ", 
         "points"}]}], "                   ", "*)"}], "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}], "  ", "*)"}], "\n", "    ", 
      RowBox[{"WriteString", "[", 
       RowBox[{
       "$Output", ",", " ", "\"\<First Run. Initializing Tables... \\n\>\""}],
        "]"}], ";", "\n", "    ", 
      RowBox[{"WriteString", "[", 
       RowBox[{"$Output", ",", " ", "\"\<Finding roots for \>\"", ",", " ", 
        RowBox[{"NL", " ", "*", " ", "NS"}], ",", " ", 
        "\"\< base points ... \>\""}], "]"}], ";", "\n", "    ", 
      RowBox[{"an", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{"0", "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"N\[Lambda]", ",", " ", "Nm", ",", " ", 
           RowBox[{"NF", " ", "+", " ", "4"}]}], "}"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"An", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{"0", "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"NL", ",", " ", "NS", ",", " ", 
           RowBox[{"NF", " ", "+", " ", "2"}]}], "}"}]}], "]"}]}], ";", "\n", 
      "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Characteristic", " ", "Roots", " ", "for", " ", "\[Lambda]"}], "=", 
        RowBox[{
         RowBox[{"0", " ", "m"}], "=", "0"}]}], "  ", "*)"}], "\n", "    ", 
      RowBox[{"j", " ", "=", " ", "1"}], ";", "\n", "    ", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"i", " ", "<=", " ", "NS"}], ",", " ", 
        RowBox[{"i", "++"}], ",", " ", "\n", "      ", 
        RowBox[{
         RowBox[{"Clear", "[", "m", "]"}], ";", "\n", "      ", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"n", " ", "=", " ", "1"}], ",", " ", 
           RowBox[{"n", " ", "<=", " ", "NF"}], ",", " ", 
           RowBox[{"n", "++"}], ",", " ", "\n", "        ", 
           RowBox[{
            RowBox[{
             RowBox[{"An", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", " ", "i", ",", " ", "n"}], "]"}], "]"}], " ",
              "=", " ", 
             RowBox[{
              RowBox[{"BesselJZero", "[", 
               RowBox[{
                RowBox[{"m", " ", "/", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", "-", " ", "m"}], ")"}]}], ",", " ", "n"}],
                "]"}], " ", "/.", " ", 
              RowBox[{"{", 
               RowBox[{"m", " ", "->", " ", 
                RowBox[{"M", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}]}], ";"}]}], "\n", 
          "      ", "]"}], ";"}]}], "\n", "    ", "]"}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
         "Characteristic", " ", "Roots", " ", "for", " ", "\[Lambda]"}], 
         "\[NotEqual]", 
         RowBox[{"0", "  ", "m"}]}], "=", "0"}], "  ", "*)"}], "\n", "    ", 
      RowBox[{"i", " ", "=", " ", "1"}], ";", "\n", "    ", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", " ", "=", " ", "2"}], ",", " ", 
        RowBox[{"j", " ", "<=", " ", "NL"}], ",", " ", 
        RowBox[{"j", "++"}], ",", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"Set", " ", "guess", " ", "for", " ", "m"}], "=", 
          RowBox[{
           RowBox[{
           "0", " ", "and", " ", "\[Lambda]", " ", "from", " ", "last", " ", 
            "step", " ", "j"}], "-", "1"}]}], " ", "*)"}], "\n", "      ", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"n", " ", "=", " ", "1"}], ",", " ", 
           RowBox[{"n", " ", "<=", " ", "NF"}], ",", " ", 
           RowBox[{"n", "++"}], ",", " ", "\n", "        ", 
           RowBox[{
            RowBox[{"Clear", "[", 
             RowBox[{
             "\[Lambda]", ",", " ", "a", ",", " ", "root", ",", " ", 
              "equation", ",", " ", "guess"}], "]"}], ";", "\n", "        ", 
            RowBox[{"equation", " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"BesselY", "[", 
                   RowBox[{"0", ",", " ", "a"}], "]"}], " ", "*", " ", 
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"1", ",", " ", 
                    RowBox[{"a", " ", "*", " ", "\[Lambda]"}]}], "]"}]}], " ",
                  "-", " ", 
                 RowBox[{
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"0", ",", " ", "a"}], "]"}], " ", "*", " ", 
                  RowBox[{"BesselY", "[", 
                   RowBox[{"1", ",", " ", 
                    RowBox[{"a", " ", "*", " ", "\[Lambda]"}]}], "]"}]}]}], 
                ")"}], " ", "/", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"BesselY", "[", 
                   RowBox[{"0", ",", " ", "a"}], "]"}], " ", "*", " ", 
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"0", ",", " ", 
                    RowBox[{"a", " ", "*", " ", "\[Lambda]"}]}], "]"}]}], " ",
                  "-", " ", 
                 RowBox[{
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"0", ",", " ", "a"}], "]"}], " ", "*", " ", 
                  RowBox[{"BesselY", "[", 
                   RowBox[{"0", ",", " ", 
                    RowBox[{"a", " ", "*", " ", "\[Lambda]"}]}], "]"}]}]}], 
                ")"}]}], " ", "/.", " ", 
              RowBox[{"\[Lambda]", " ", "->", " ", 
               RowBox[{"L", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}]}]}], ";", "\n", "        ", 
            RowBox[{"guess", " ", "=", " ", 
             RowBox[{"An", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "i", ",", " ", 
                "n"}], "]"}], "]"}]}], ";", "\n", "        ", 
            RowBox[{"root", " ", "=", " ", 
             RowBox[{"Chop", "[", 
              RowBox[{"a", " ", "/.", " ", 
               RowBox[{"FindRoot", "[", 
                RowBox[{
                 RowBox[{"equation", " ", "==", " ", "0"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"a", ",", " ", "guess"}], "}"}]}], "]"}]}], "]"}]}],
             ";", "\n", "        ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Not", "[", 
                 RowBox[{"MatchQ", "[", 
                  RowBox[{"root", ",", " ", "_Real"}], "]"}], "]"}], " ", "||",
                 " ", 
                RowBox[{"root", " ", "<=", " ", "0"}], " ", "||", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"n", " ", ">", " ", "1"}], " ", "&&", " ", 
                  RowBox[{"(", 
                   RowBox[{"root", " ", "<=", " ", 
                    RowBox[{"An", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", " ", "i", ",", " ", 
                    RowBox[{"n", " ", "-", " ", "1"}]}], "]"}], "]"}]}], 
                   ")"}]}], ")"}], " ", "||", " ", 
                RowBox[{"root", " ", "<=", " ", "guess"}]}], ")"}], ",", "\n",
               "          ", 
              RowBox[{
               RowBox[{
                RowBox[{"An", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", " ", "i", ",", " ", "n"}], "]"}], "]"}], 
                " ", "=", " ", "0"}], ";"}], "\n", "          ", ",", "\n", 
              "          ", 
              RowBox[{
               RowBox[{
                RowBox[{"An", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", " ", "i", ",", " ", "n"}], "]"}], "]"}], 
                " ", "=", " ", "root"}], ";"}]}], "\n", "        ", "]"}], 
            ";"}]}], "\n", "      ", "]"}], ";"}]}], "\n", "    ", "]"}], ";",
       "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Characteristic", " ", "Roots", " ", "for", " ", "\[Lambda]"}], 
        "\[NotEqual]", 
        RowBox[{"0", "  ", "m"}], "\[NotEqual]", "0"}], "  ", "*)"}], "\n", 
      "    ", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"n", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"n", " ", "<=", " ", "NF"}], ",", " ", 
        RowBox[{"n", "++"}], ",", " ", "\n", "      ", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
           RowBox[{"i", " ", "<=", " ", "NS"}], ",", " ", 
           RowBox[{"i", "++"}], ",", " ", "\n", "        ", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", " ", "=", " ", "2"}], ",", " ", 
              RowBox[{"j", " ", "<=", " ", "NL"}], ",", " ", 
              RowBox[{"j", "++"}], ",", " ", "\n", "          ", 
              RowBox[{
               RowBox[{
                RowBox[{"An", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", " ", "i", ",", " ", "n"}], "]"}], "]"}], 
                " ", "=", " ", "0"}], ";", "\n", "          ", 
               RowBox[{"Clear", "[", 
                RowBox[{
                "\[Lambda]", ",", " ", "q", ",", " ", "a", ",", " ", "m"}], 
                "]"}], ";", "\n", "          ", 
               RowBox[{"equation", " ", "=", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"BesselJ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], " ", "-", " ", "q"}], ",", " ", 
                    RowBox[{"a", " ", "*", " ", 
                    RowBox[{"\[Lambda]", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"m", " ", "/", " ", "2"}]}], ")"}]}]}]}], "]"}], 
                   " ", "*", " ", 
                   RowBox[{"BesselJ", "[", 
                    RowBox[{"q", ",", " ", "a"}], "]"}]}], " ", "+", " ", 
                  RowBox[{
                   RowBox[{"BesselJ", "[", 
                    RowBox[{
                    RowBox[{"-", "q"}], ",", " ", "a"}], "]"}], " ", 
                   RowBox[{"BesselJ", "[", 
                    RowBox[{
                    RowBox[{"1", " ", "+", " ", "q"}], ",", " ", 
                    RowBox[{"a", " ", "*", " ", 
                    RowBox[{"\[Lambda]", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"m", " ", "/", " ", "2"}]}], ")"}]}]}]}], 
                    "]"}]}]}], " ", "//.", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"q", " ", "->", " ", 
                    RowBox[{"m", " ", "/", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", "-", " ", "m"}], ")"}]}]}], ",", " ", 
                   RowBox[{"\[Lambda]", " ", "->", " ", 
                    RowBox[{"L", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"m", " ", "->", " ", 
                    RowBox[{"M", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}]}], ";", "\n", 
               "          ", 
               RowBox[{"guess", " ", "=", " ", 
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{"An", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "i", ",", 
                    " ", "n"}], "]"}], "]"}], ",", " ", 
                  RowBox[{"An", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", " ", 
                    RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "n"}], "]"}],
                    "]"}]}], "]"}]}], ";", "\n", "          ", 
               RowBox[{"root", " ", "=", " ", 
                RowBox[{"Chop", "[", 
                 RowBox[{"a", " ", "/.", " ", 
                  RowBox[{"FindRoot", "[", 
                   RowBox[{"equation", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", " ", "guess"}], "}"}]}], "]"}]}], 
                 "]"}]}], ";", "\n", "          ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Not", "[", 
                   RowBox[{"MatchQ", "[", 
                    RowBox[{"root", ",", " ", "_Real"}], "]"}], "]"}], " ", "||",
                   " ", 
                  RowBox[{"root", " ", "<=", " ", "guess"}]}], ",", "\n", 
                 "            ", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "\"\<Bad Guess.\>\"", ",", " ", "\"\< n=\>\"", ",", " ", 
                    "n", ",", " ", "\"\< \[Lambda]=\>\"", ",", " ", 
                    RowBox[{"L", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", " ", "\"\< m=\>\"", 
                    ",", " ", 
                    RowBox[{"M", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", " ", "\"\< g1=\>\"", 
                    ",", " ", 
                    RowBox[{"An", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "i", ",", 
                    " ", "n"}], "]"}], "]"}], ",", " ", "\"\< g2=\>\"", ",", 
                    " ", 
                    RowBox[{"An", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", " ", 
                    RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "n"}], "]"}],
                     "]"}], ",", " ", "\"\< guess=\>\"", ",", " ", "guess", 
                    ",", " ", "\"\< an=\>\"", ",", " ", "root"}], "]"}], ";", 
                  "\n", "            ", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"An", "[", 
                    RowBox[{"0", ",", "0", ",", "0"}], "]"}], "=", 
                    RowBox[{"-", "1"}]}], ";"}], "*)"}], "\n", "            ", 
                  RowBox[{"Abort", "[", "]"}], ";"}], "\n", "            ", 
                 ",", "\n", "            ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"An", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", " ", "i", ",", " ", "n"}], "]"}], "]"}],
                    " ", "=", " ", "root"}], ";"}]}], "\n", "          ", 
                "]"}], ";", "\n", "          ", 
               RowBox[{"Clear", "[", 
                RowBox[{
                "f", ",", " ", "guess", ",", " ", "root", ",", " ", 
                 "equation"}], "]"}], ";"}]}], "\n", "        ", "]"}], 
            ";"}]}], "\n", "      ", "]"}], ";"}]}], "\n", "    ", "]"}], ";",
       "\n", "    ", 
      RowBox[{"WriteString", "[", 
       RowBox[{"$Output", ",", " ", "\"\<Done!\\n\>\""}], "]"}], ";", "\n", 
      "    ", 
      RowBox[{"(*", " ", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}], "  ", "*)"}], "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"an", "[", "]"}], ":", " ", 
        RowBox[{
        "Characteristics", " ", "roots", " ", "for", " ", "intermediate", " ",
          "points", " ", "Mr", " ", "Lr"}]}], " ", "*)"}], "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}], "  ", "*)"}], "\n", "    ", 
      RowBox[{"WriteString", "[", 
       RowBox[{"$Output", ",", " ", "\"\<Finding roots for \>\"", ",", " ", 
        RowBox[{"Nm", " ", "*", " ", "N\[Lambda]"}], ",", " ", 
        "\"\< intermediate points ... \>\""}], "]"}], ";", "\n", "    ", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"n", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"n", " ", "<=", " ", "NF"}], ",", " ", 
        RowBox[{"n", "++"}], ",", " ", "\n", "      ", 
        RowBox[{
         RowBox[{"DataSet", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"L", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
                  RowBox[{"M", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", " ", 
                RowBox[{"An", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", " ", "i", ",", " ", "n"}], "]"}], "]"}]}],
                "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", " ", "1", ",", " ", "NS"}], "}"}]}], "]"}], 
            ",", " ", 
            RowBox[{"{", 
             RowBox[{"j", ",", " ", "1", ",", " ", "NL"}], "}"}]}], "]"}]}], 
         ";", "\n", "      ", 
         RowBox[{"f", " ", "=", " ", 
          RowBox[{"ListInterpolation", "[", "DataSet", "]"}]}], ";", "\n", 
         "      ", 
         RowBox[{"Clear", "[", "m", "]"}], ";", "\n", "      ", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
           RowBox[{"i", " ", "<=", " ", "Nm"}], ",", " ", 
           RowBox[{"i", "++"}], ",", " ", "\n", "        ", 
           RowBox[{
            RowBox[{
             RowBox[{"an", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", "i", ",", " ", "n"}], "]"}], "]"}], " ",
              "=", " ", 
             RowBox[{
              RowBox[{"BesselJZero", "[", 
               RowBox[{
                RowBox[{"m", " ", "/", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", "-", " ", "m"}], ")"}]}], ",", " ", "n"}],
                "]"}], " ", "/.", " ", 
              RowBox[{"{", 
               RowBox[{"m", " ", "->", " ", 
                RowBox[{"Mr", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}]}], ";"}]}], "\n", 
          "      ", "]"}], ";", "\n", "      ", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", " ", "=", " ", "2"}], ",", " ", 
           RowBox[{"j", " ", "<=", " ", "N\[Lambda]"}], ",", " ", 
           RowBox[{"j", "++"}], ",", " ", "\n", "        ", 
           RowBox[{
            RowBox[{"Clear", "[", 
             RowBox[{
             "\[Lambda]", ",", " ", "a", ",", " ", "root", ",", " ", 
              "equation", ",", " ", "guess"}], "]"}], ";", "\n", "        ", 
            RowBox[{"equation", " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"BesselY", "[", 
                   RowBox[{"0", ",", " ", "a"}], "]"}], " ", "*", " ", 
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"1", ",", " ", 
                    RowBox[{"a", " ", "*", " ", "\[Lambda]"}]}], "]"}]}], " ",
                  "-", " ", 
                 RowBox[{
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"0", ",", " ", "a"}], "]"}], " ", "*", " ", 
                  RowBox[{"BesselY", "[", 
                   RowBox[{"1", ",", " ", 
                    RowBox[{"a", " ", "*", " ", "\[Lambda]"}]}], "]"}]}]}], 
                ")"}], " ", "/", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"BesselY", "[", 
                   RowBox[{"0", ",", " ", "a"}], "]"}], " ", "*", " ", 
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"0", ",", " ", 
                    RowBox[{"a", " ", "*", " ", "\[Lambda]"}]}], "]"}]}], " ",
                  "-", " ", 
                 RowBox[{
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"0", ",", " ", "a"}], "]"}], " ", "*", " ", 
                  RowBox[{"BesselY", "[", 
                   RowBox[{"0", ",", " ", 
                    RowBox[{"a", " ", "*", " ", "\[Lambda]"}]}], "]"}]}]}], 
                ")"}]}], " ", "/.", " ", 
              RowBox[{"\[Lambda]", " ", "->", " ", 
               RowBox[{"Lr", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}]}]}], ";", "\n", "        ", 
            RowBox[{"guess", " ", "=", " ", 
             RowBox[{"f", "[", 
              RowBox[{
               RowBox[{"Lr", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", " ", "0"}], "]"}]}], ";",
             "\n", "        ", 
            RowBox[{"root", " ", "=", " ", 
             RowBox[{"Chop", "[", 
              RowBox[{"a", " ", "/.", " ", 
               RowBox[{"FindRoot", "[", 
                RowBox[{"equation", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"a", ",", " ", "guess"}], "}"}]}], "]"}]}], "]"}]}],
             ";", "\n", "        ", 
            RowBox[{
             RowBox[{"an", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", " ", "1", ",", " ", "n"}], "]"}], "]"}], " ",
              "=", " ", "root"}], ";"}]}], "\n", "      ", "]"}], ";", "\n", 
         "      ", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
           RowBox[{"i", " ", "<=", " ", "Nm"}], ",", " ", 
           RowBox[{"i", "++"}], ",", " ", "\n", "        ", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", " ", "=", " ", "2"}], ",", " ", 
              RowBox[{"j", " ", "<=", " ", "N\[Lambda]"}], ",", " ", 
              RowBox[{"j", "++"}], ",", " ", "\n", "          ", 
              RowBox[{
               RowBox[{"Clear", "[", 
                RowBox[{
                "\[Lambda]", ",", " ", "q", ",", " ", "a", ",", " ", "m", ",",
                  " ", "equation", ",", " ", "guess", ",", " ", "root"}], 
                "]"}], ";", "\n", "          ", 
               RowBox[{"equation", " ", "=", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"BesselJ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], " ", "-", " ", "q"}], ",", " ", 
                    RowBox[{"a", " ", "*", " ", 
                    RowBox[{"\[Lambda]", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"m", " ", "/", " ", "2"}]}], ")"}]}]}]}], "]"}], 
                   " ", "*", " ", 
                   RowBox[{"BesselJ", "[", 
                    RowBox[{"q", ",", " ", "a"}], "]"}]}], " ", "+", " ", 
                  RowBox[{
                   RowBox[{"BesselJ", "[", 
                    RowBox[{
                    RowBox[{"-", "q"}], ",", " ", "a"}], "]"}], " ", "*", " ", 
                   RowBox[{"BesselJ", "[", 
                    RowBox[{
                    RowBox[{"1", " ", "+", " ", "q"}], ",", " ", 
                    RowBox[{"a", " ", "*", " ", 
                    RowBox[{"\[Lambda]", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"m", " ", "/", " ", "2"}]}], ")"}]}]}]}], 
                    "]"}]}]}], " ", "//.", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"q", " ", "->", " ", 
                    RowBox[{"m", " ", "/", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", "-", " ", "m"}], ")"}]}]}], ",", " ", 
                   RowBox[{"\[Lambda]", " ", "->", " ", 
                    RowBox[{"Lr", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"m", " ", "->", " ", 
                    RowBox[{"Mr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}]}], ";", "\n", 
               "          ", 
               RowBox[{"guess", " ", "=", " ", 
                RowBox[{"f", "[", 
                 RowBox[{
                  RowBox[{"Lr", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ",", " ", 
                  RowBox[{"Mr", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", "\n", 
               "          ", 
               RowBox[{"root", " ", "=", " ", 
                RowBox[{"Chop", "[", 
                 RowBox[{"a", " ", "/.", " ", 
                  RowBox[{"FindRoot", "[", 
                   RowBox[{"equation", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", " ", "guess"}], "}"}]}], "]"}]}], 
                 "]"}]}], ";", "\n", "          ", 
               RowBox[{
                RowBox[{"an", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", " ", "i", ",", " ", "n"}], "]"}], "]"}], 
                " ", "=", " ", "root"}], ";"}]}], "\n", "        ", "]"}], 
            ";"}]}], "\n", "      ", "]"}], ";", "\n", "      ", 
         RowBox[{"Clear", "[", 
          RowBox[{
          "DataSet", ",", " ", "f", ",", " ", "equation", ",", " ", "guess", 
           ",", " ", "root"}], "]"}], ";"}]}], "\n", "    ", "]"}], ";", "\n",
       "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Characteristic", " ", "Roots", " ", "for", " ", "\[Lambda]"}], "=", 
        RowBox[{
         RowBox[{"0", " ", "m"}], "=", "0"}]}], "  ", "*)"}], "\n", "    ", 
      RowBox[{"j", " ", "=", " ", "1"}], ";", "\n", "    ", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"i", " ", "<=", " ", "Nm"}], ",", " ", 
        RowBox[{"i", "++"}], ",", " ", "\n", "      ", 
        RowBox[{
         RowBox[{"Clear", "[", "m", "]"}], ";", "\n", "      ", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"n", " ", "=", " ", 
            RowBox[{"NF", " ", "+", " ", "1"}]}], ",", " ", 
           RowBox[{"n", " ", "<=", " ", 
            RowBox[{"NF", " ", "+", " ", "\[CapitalDelta]NF"}]}], ",", " ", 
           RowBox[{"n", "++"}], ",", " ", "\n", "        ", 
           RowBox[{
            RowBox[{
             RowBox[{"an", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", " ", "i", ",", " ", "n"}], "]"}], "]"}], " ",
              "=", " ", 
             RowBox[{
              RowBox[{"BesselJZero", "[", 
               RowBox[{
                RowBox[{"m", " ", "/", " ", 
                 RowBox[{"(", 
                  RowBox[{"2.", " ", "-", " ", "m"}], ")"}]}], ",", " ", 
                "n"}], "]"}], " ", "/.", " ", 
              RowBox[{"{", 
               RowBox[{"m", " ", "->", " ", 
                RowBox[{"Mr", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}]}], ";"}]}], "\n", 
          "      ", "]"}], ";"}]}], "\n", "    ", "]"}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
         "Characteristic", " ", "Roots", " ", "for", " ", "\[Lambda]"}], 
         "\[NotEqual]", 
         RowBox[{"0", "  ", "m"}]}], "=", "0"}], "  ", "*)"}], "\n", "    ", 
      RowBox[{"i", " ", "=", " ", "1"}], ";", "\n", "    ", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", " ", "=", " ", "2"}], ",", " ", 
        RowBox[{"j", " ", "<=", " ", "N\[Lambda]"}], ",", " ", 
        RowBox[{"j", "++"}], ",", " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"Set", " ", "guess", " ", "for", " ", "m"}], "=", 
          RowBox[{
           RowBox[{
           "0", " ", "and", " ", "\[Lambda]", " ", "from", " ", "last", " ", 
            "step", " ", "j"}], "-", "1"}]}], " ", "*)"}], "\n", "      ", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"n", " ", "=", " ", 
            RowBox[{"NF", " ", "+", " ", "1"}]}], ",", " ", 
           RowBox[{"n", " ", "<=", " ", 
            RowBox[{"NF", " ", "+", " ", "\[CapitalDelta]NF"}]}], ",", " ", 
           RowBox[{"n", "++"}], ",", " ", "\n", "        ", 
           RowBox[{
            RowBox[{"Clear", "[", 
             RowBox[{
             "\[Lambda]", ",", " ", "a", ",", " ", "equation", ",", " ", 
              "guess", ",", " ", "root"}], "]"}], ";", "\n", "        ", 
            RowBox[{"equation", " ", "=", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"BesselY", "[", 
                   RowBox[{"0", ",", " ", "a"}], "]"}], " ", "*", " ", 
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"1", ",", " ", 
                    RowBox[{"a", " ", "*", " ", "\[Lambda]"}]}], "]"}]}], " ",
                  "-", " ", 
                 RowBox[{
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"0", ",", " ", "a"}], "]"}], " ", "*", " ", 
                  RowBox[{"BesselY", "[", 
                   RowBox[{"1", ",", " ", 
                    RowBox[{"a", " ", "*", " ", "\[Lambda]"}]}], "]"}]}]}], 
                ")"}], " ", "/", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"BesselY", "[", 
                   RowBox[{"0", ",", " ", "a"}], "]"}], " ", "*", " ", 
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"0", ",", " ", 
                    RowBox[{"a", " ", "*", " ", "\[Lambda]"}]}], "]"}]}], " ",
                  "-", " ", 
                 RowBox[{
                  RowBox[{"BesselJ", "[", 
                   RowBox[{"0", ",", " ", "a"}], "]"}], " ", "*", " ", 
                  RowBox[{"BesselY", "[", 
                   RowBox[{"0", ",", " ", 
                    RowBox[{"a", " ", "*", " ", "\[Lambda]"}]}], "]"}]}]}], 
                ")"}]}], " ", "/.", " ", 
              RowBox[{"\[Lambda]", " ", "->", " ", 
               RowBox[{"Lr", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}]}]}], ";", "\n", "        ", 
            RowBox[{"guess", " ", "=", " ", 
             RowBox[{"an", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"j", " ", "-", " ", "1"}], ",", " ", "i", ",", " ", 
                "n"}], "]"}], "]"}]}], ";", "\n", "        ", 
            RowBox[{"root", " ", "=", " ", 
             RowBox[{"Chop", "[", 
              RowBox[{"a", " ", "/.", " ", 
               RowBox[{"FindRoot", "[", 
                RowBox[{
                 RowBox[{"equation", " ", "==", " ", "0"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"a", ",", " ", "guess"}], "}"}]}], "]"}]}], "]"}]}],
             ";", "\n", "        ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Not", "[", 
                 RowBox[{"MatchQ", "[", 
                  RowBox[{"root", ",", " ", "_Real"}], "]"}], "]"}], " ", "||",
                 " ", 
                RowBox[{"root", " ", "<=", " ", "0"}], " ", "||", " ", 
                RowBox[{"root", " ", "<=", " ", "guess"}]}], ")"}], ",", "\n",
               "          ", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<***** Invalid Root \>\"", ",", " ", 
                 "\"\< \[Lambda]=\>\"", ",", " ", 
                 RowBox[{"Lr", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", " ", "\"\< m=\>\"", 
                 ",", " ", 
                 RowBox[{
                  RowBox[{"Mr", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], " ", "//", " ", "N"}], ",",
                  " ", "\"\< n=\>\"", ",", " ", "n", ",", " ", 
                 "\"\< root=\>\"", ",", " ", "root", ",", " ", 
                 "\"\< guess=\>\"", ",", " ", "guess"}], "]"}], ";", "\n", 
               "          ", 
               RowBox[{
                RowBox[{"an", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", " ", "i", ",", " ", "n"}], "]"}], "]"}], 
                " ", "=", " ", "0"}], ";"}], "\n", "          ", ",", "\n", 
              "          ", 
              RowBox[{
               RowBox[{
                RowBox[{"an", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", " ", "i", ",", " ", "n"}], "]"}], "]"}], 
                " ", "=", " ", "root"}], ";"}]}], "\n", "        ", "]"}], 
            ";", "\n", "        ", 
            RowBox[{"Clear", "[", 
             RowBox[{"equation", ",", " ", "guess", ",", " ", "root"}], "]"}],
             ";"}]}], "\n", "      ", "]"}], ";"}]}], "\n", "    ", "]"}], 
      ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Characteristic", " ", "Roots", " ", "for", " ", "\[Lambda]"}], 
        "\[NotEqual]", 
        RowBox[{"0", "  ", "m"}], "\[NotEqual]", "0"}], "  ", "*)"}], "\n", 
      "    ", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"n", " ", "=", " ", 
         RowBox[{"NF", " ", "+", " ", "1"}]}], ",", " ", 
        RowBox[{"n", " ", "<=", " ", 
         RowBox[{"NF", " ", "+", " ", "\[CapitalDelta]NF"}]}], ",", " ", 
        RowBox[{"n", "++"}], ",", " ", "\n", "      ", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", " ", "=", " ", "2"}], ",", " ", 
           RowBox[{"i", " ", "<=", " ", "Nm"}], ",", " ", 
           RowBox[{"i", "++"}], ",", " ", "\n", "        ", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", " ", "=", " ", "2"}], ",", " ", 
              RowBox[{"j", " ", "<=", " ", "N\[Lambda]"}], ",", " ", 
              RowBox[{"j", "++"}], ",", " ", "\n", "          ", 
              RowBox[{
               RowBox[{"DataSet", " ", "=", " ", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"k", ",", " ", 
                    RowBox[{"an", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", " ", "i", ",", " ", "k"}], "]"}], 
                    "]"}]}], "}"}], ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", " ", "1", ",", " ", 
                    RowBox[{"n", " ", "-", " ", "1"}]}], "}"}]}], "]"}]}], 
               ";", "\n", "          ", 
               RowBox[{"f", " ", "=", " ", 
                RowBox[{"Interpolation", "[", 
                 RowBox[{"DataSet", ",", " ", 
                  RowBox[{"InterpolationOrder", " ", "->", " ", "3"}]}], 
                 "]"}]}], ";", "\n", "          ", 
               RowBox[{
                RowBox[{"an", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", " ", "i", ",", " ", "n"}], "]"}], "]"}], 
                " ", "=", " ", "0"}], ";", "\n", "          ", 
               RowBox[{"Clear", "[", 
                RowBox[{
                "\[Lambda]", ",", " ", "q", ",", " ", "a", ",", " ", "m", ",",
                  " ", "equation", ",", " ", "guess", ",", " ", "root"}], 
                "]"}], ";", "\n", "          ", 
               RowBox[{"equation", " ", "=", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"BesselJ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], " ", "-", " ", "q"}], ",", " ", 
                    RowBox[{"a", " ", "*", " ", 
                    RowBox[{"\[Lambda]", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"m", " ", "/", " ", "2"}]}], ")"}]}]}]}], "]"}], 
                   " ", "*", " ", 
                   RowBox[{"BesselJ", "[", 
                    RowBox[{"q", ",", " ", "a"}], "]"}]}], " ", "+", " ", 
                  RowBox[{
                   RowBox[{"BesselJ", "[", 
                    RowBox[{
                    RowBox[{"-", "q"}], ",", " ", "a"}], "]"}], " ", 
                   RowBox[{"BesselJ", "[", 
                    RowBox[{
                    RowBox[{"1", " ", "+", " ", "q"}], ",", " ", 
                    RowBox[{"a", " ", "*", " ", 
                    RowBox[{"\[Lambda]", "^", 
                    RowBox[{"(", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"m", " ", "/", " ", "2"}]}], ")"}]}]}]}], 
                    "]"}]}]}], " ", "//.", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"q", " ", "->", " ", 
                    RowBox[{"m", " ", "/", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", "-", " ", "m"}], ")"}]}]}], ",", " ", 
                   RowBox[{"\[Lambda]", " ", "->", " ", 
                    RowBox[{"Lr", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"m", " ", "->", " ", 
                    RowBox[{"Mr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}]}], ";", "\n", 
               "          ", 
               RowBox[{"guess", " ", "=", " ", 
                RowBox[{"f", "[", "n", "]"}]}], ";", "\n", "          ", 
               RowBox[{"root", " ", "=", " ", 
                RowBox[{"Chop", "[", 
                 RowBox[{"a", " ", "/.", " ", 
                  RowBox[{"FindRoot", "[", 
                   RowBox[{"equation", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", " ", "guess"}], "}"}]}], "]"}]}], 
                 "]"}]}], ";", "\n", "          ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Not", "[", 
                   RowBox[{"MatchQ", "[", 
                    RowBox[{"root", ",", " ", "_Real"}], "]"}], "]"}], " ", "||",
                   " ", 
                  RowBox[{"root", " ", "<=", " ", 
                   RowBox[{"f", "[", "n", "]"}]}]}], ",", "\n", 
                 "            ", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"an", "[", 
                    RowBox[{"0", ",", "0", ",", "0"}], "]"}], "=", 
                    RowBox[{"-", "1"}]}], ";"}], "*)"}], "\n", "            ", 
                 RowBox[{
                  RowBox[{"Abort", "[", "]"}], ";"}], "\n", "            ", 
                 ",", "\n", "            ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"an", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", " ", "i", ",", " ", "n"}], "]"}], "]"}],
                    " ", "=", " ", "root"}], ";"}]}], "\n", "          ", 
                "]"}], ";", "\n", "          ", 
               RowBox[{"Clear", "[", 
                RowBox[{
                "DataSet", ",", " ", "f", ",", " ", "equation", ",", " ", 
                 "guess", ",", " ", "root"}], "]"}], ";"}]}], "\n", 
             "        ", "]"}], ";"}]}], "\n", "      ", "]"}], ";"}]}], "\n",
        "    ", "]"}], ";", "\n", "    ", 
      RowBox[{"WriteString", "[", 
       RowBox[{"$Output", ",", " ", "\"\<Done!\\n\>\""}], "]"}], ";", "\n", 
      "    ", 
      RowBox[{"On", "[", 
       RowBox[{"FindRoot", "::", "lstol"}], "]"}], ";", "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}], "  ", "*)"}], "\n", "    ", 
      RowBox[{"(*", "  ", "*)"}], "\n", "    ", 
      RowBox[{"(*", " ", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}], "  ", "*)"}], "\n", "    ", 
      RowBox[{"WriteString", "[", 
       RowBox[{
       "$Output", ",", " ", "\"\<Bulding \>\"", ",", " ", "NF", ",", " ", 
        "\"\< Interpolating functions objects... \>\""}], "]"}], ";", "\n", 
      "    ", 
      RowBox[{"$InterpolatingFunctionsArray", " ", "=", " ", 
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{"0", "&"}], ",", " ", 
         RowBox[{"{", "NF", "}"}]}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"n", " ", "=", " ", "1"}], ",", " ", 
        RowBox[{"n", " ", "<=", " ", "NF"}], ",", " ", 
        RowBox[{"n", "++"}], ",", " ", "\n", "      ", 
        RowBox[{
         RowBox[{"DataSet", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Mr", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
                    RowBox[{"Lr", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "}"}], ",", " ", 
                  RowBox[{"an", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", " ", "i", ",", " ", "n"}], "]"}], 
                   "]"}]}], "}"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"i", ",", " ", "Nm"}], "}"}]}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"j", ",", " ", "N\[Lambda]"}], "}"}]}], "]"}], ",", 
            " ", "1"}], "]"}]}], ";", "\n", "      ", 
         RowBox[{
          RowBox[{"$InterpolatingFunctionsArray", "[", 
           RowBox[{"[", "n", "]"}], "]"}], " ", "=", " ", 
          RowBox[{"Interpolation", "[", "DataSet", "]"}]}], ";"}]}], "\n", 
       "    ", "]"}], ";", "\n", "    ", 
      RowBox[{"WriteString", "[", 
       RowBox[{"$Output", ",", " ", "\"\<Done!\\n\>\""}], "]"}], ";", "\n", 
      "    ", 
      RowBox[{"$CylinderFunctionRootsInitialized", " ", "=", " ", "True"}], 
      ";", "\n", "    ", "$InterpolatingFunctionsArray"}]}], "\n", "  ", 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.872290719817856*^9, {3.8722947166048203`*^9, 3.8722947465603757`*^9}, {
   3.872294807114667*^9, 3.8722948111153746`*^9}, {3.872294866268873*^9, 
   3.872294898022522*^9}, {3.8722949726745815`*^9, 3.8722949946278553`*^9}, {
   3.872295129397047*^9, 3.872295131678542*^9}, {3.872295173237482*^9, 
   3.8722951824701247`*^9}, {3.8722952190204906`*^9, 
   3.8722952854862213`*^9}, {3.8722953351169977`*^9, 
   3.8722953531966815`*^9}, {3.872295541943095*^9, 3.8722955476643744`*^9}, 
   3.8722956204111567`*^9, {3.8722958334274693`*^9, 3.872295877323027*^9}, {
   3.872295965281479*^9, 3.872295969859232*^9}, {3.8722960021036696`*^9, 
   3.8722960081404743`*^9}, {3.8722960402468767`*^9, 
   3.8722960410966635`*^9}, {3.8722969905646343`*^9, 
   3.8722970074503417`*^9}, {3.872297131364313*^9, 3.872297147559449*^9}, {
   3.872297269358788*^9, 3.872297287285202*^9}, {3.872297491400982*^9, 
   3.8722975666928697`*^9}, 3.872297782199153*^9, {3.872297818914653*^9, 
   3.872297842003458*^9}, {3.8722979021985717`*^9, 3.87229790337697*^9}, {
   3.8723223288266606`*^9, 3.8723223314599113`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"0f027793-21cc-4f03-a345-5fb2372a0917"],

Cell["SetAttributes[getCylinderFunctionRoots, {ReadProtected}]; ", "Code",
 CellChangeTimes->{3.8722906693348656`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"7bb9c075-cf89-4710-abd6-bbe5f5ef1d15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getCylinderFunctionRoots", "[", "]"}]], "Input",
 CellChangeTimes->{{3.872295043116496*^9, 3.872295043206217*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"5130c6b6-96cd-4751-b988-0c86ae33b7f7"],

Cell["\<\
First Run. Initializing Tables... 
Finding roots for 2499 base points ... Done!
Finding roots for 2400 intermediate points ... Done!
Bulding 8 Interpolating functions objects... Done!\
\>", "Print",
 CellChangeTimes->{3.872307411800245*^9, 3.8723224017111835`*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"7ade383f-4384-454e-8690-73e6dada12d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["InterpolatingFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.9500000000000001`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.495`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.9500000000000001`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.495`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    InterpolatingFunction[{{0.01, 0.9500000000000001}, {0.005, 0.495}}, {
     5, 7, 0, {48, 50}, {4, 4}, 0, 0, 0, 0, Automatic, {}, {}, 
      False}, {CompressedData["
1:eJwtkD1MAkEQhc+WGlsIHXQm2MoroYWaikQthRZbroYWChpoaEisxMTCQEyM
kcSf6Bk0yh3/HNCdNTvje8kWuzvzZr4XK1zkTg8syzoy5zLcTbvlCnoR28/2
mmjURR2Yi3m5QshpFU9C10jkq/0gfou2uTmtOxwnRQMMgrj5uUdODR7glcXw
ESUpKw5hqZ6RceXjBbW+NLxCbZ03RGVs5B3nZ6IPyDbhroM/sQ0+kdIFRtAy
+wvDJ9E3DrXwB7pW/pfzx+wbk8Nlvwcd73r0mZBnSr8p953Rd44bzWNO/wU5
luRfkmeFjea0ItcaGkvSJ5+P/3w35Nwyry15d9gDvazAMg==
      "], CompressedData["
1:eJwtkD1MAkEQhc+W+mwhdNgKrbxSW6mpTJQSSKygvhZsoSNHYmOIiTE5TUwE
ghJ/+IcD8SRnC+1Rszu8l2yxuzNv5nvRi2zq8sAwjGN1imbj1C9cwwlb63On
hGpFBHVRLzWEXDt3ErrFUbrcCmJ3qKuba98jEdd6QDuIqZ9HpPYG+C9ow2fk
dVnuBYboFWe+/mjipiUNEFu3jYjuCneQudJ6g97GbLxjq6uCLpKywAekzPrE
95cIh1LYg6yV7nP+gH0DcgzZP4KM90f0GZNnQr8J953Sd4YnwZnR3yXHnPxz
8iywkZwW5PqBxBJfkm+Jfb6/5PSYl0feP+a7IvcKO5f0xL0=
      "]}, {Developer`PackedArrayForm, CompressedData["
1:eJwd2lMQGDyzANC/tm3btm3btq2vtm3btm3btu32nt7MnJk87Fsm2N0kaNiu
YtsA//vf/xqE+N//j3/zgAQiMEEISjCC8y8sJKEITRjCEo7wRCAikYhMFKIS
jejEICaxiE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN
7OQgJ7nITR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q
1KAmtahNHepSj/r/1oGGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje6
04Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxj
OjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7
O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5zhatc4zo3
uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOFr3zjOz/4
yS9+84e//Nv8AQhIIAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJ
LGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEku
cpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1q
U4e61KM+DWhIIxrThKY0ozktaEkrWtOGfwd4O9rTgY50ojNd6Eo3utODnvSi
N334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMks
ZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvYyS52
s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJLW5z
h7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+MkvfvOH
v/y7+AMQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5x
iUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJ
R34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalH
fRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg//0Zd+
9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYwl3nM
ZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCXfezn
AAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd73OcB
D3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl3+P/gAE
JBCBCUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQk
EYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQ
hSlCUYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGN
aUJTmtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96cN/9KUf/RnAQAYx
mCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGY
JSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgj
HOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc8
5RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85V/CH4CABCIwQQhK
MIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoy
kpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGK
U4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rT
gpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4
IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkr
WMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4
ySlOc4aznOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJ
K17zhre84z0f+MgnPvOFr3zjOz/4yS9+84e//Cv2BSAggQhMEIISjOCEICSh
CE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalI
TRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozilKAkpShN
GcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b
2tKO9nSgI53oTBe60o3u9KAnvehNH/6jL/3ozwAGMojBDGEowxjOCEYyitGM
YSzjGM8EJjKJyUxhKtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axh
LetYzwY2sonNbGEr29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs
5zjPBS5yictc4SrXuM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3v
eM8HPvKJz3zhK9/4zg9+8ovf/OEv/wr9AQhIIAIThKAEIzghCEkoQhOGsIQj
PBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9
GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwV
qEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGtrSjPR3o
SCc604WudKM7PehJL3rTh//oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOB
iUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GN
bGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc
4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jKM57zgpe84jVveMs73vOBj3zi
M1/4yje+84Of/OI3f/jLvyZfAAISiMAEISjBCE4IQhKK0IQhLOEITwQiEonI
RCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxk
ISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylSh
KtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr
3ehOD3rSi9704T/60o/+DGAggxjMEIYyjOGMYCSjGM0YxjKO8UxgIpOYzBSm
Mo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrWso71bGAjm9jMFray
je3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5yjvNc4CKXuMwVrnKN
69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v
/OAnv/jNH/7yr8EfgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKIT
g5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spOD
nOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa
1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570
ojd9+I++9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJ
LGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72Mku
drOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1u
c4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37z
h7/8+9wTgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKITg5jEIjZx
iEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spODnOQiN3nI
Sz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dahL
Perzf1Mxt3M=
      "], CompressedData["
1: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
D8KVpnFrd9Pg250ds4TM4ZJacJ15Iw3DAQuPrWDT0RnvSdu1iI4SOyJTKB0V
qz8lBGbTETk1OdWpg47+0ewjyTMZoCS89LL3YMDE9lZVYhoDrjFx/7w7GFA0
rp8c1WLi7YOYLKftTAwoVb1KeczEF/NvLv0CFq4nrIzyInx3v9amRpP4kwnb
+pC7iI1Vi81ytIPYGP1NWfagho2JlTL3zedyUCR5o7cjhQNa7Z8bHUwumrJ6
KBGRXMzY/Cuj6TsXpe8XLV+3lYcn9G/m8wZ4+PIIwbOyKVhbvbjzRi7xedrU
6UpE77sBbbWP71EwLu83uJ/wQLrqGe8N1RT0iB+8t/gjBWWt70y0SC81VNS2
5YyT3Fc/F9pMfGj7qVDXVCUqVM+G9S42omL8+Uvzajsqcu1WZs31o8LojPSN
yDgqari7v18mPUndRnptRiUVvl+UPx/uJPMIfp/qxKLhhvfxVpo+DbZ2Nqxr
pC+5JM0/b7qXhmN9TQuqc8h8LiXd3UjmUF6/hksjHJGMU96VpnQcna+gkxVE
5tKvySzPoMP6H/WXQhMd6a8u2r2axkBOmvLHltUMXHv55EPgaQZmP32mFt/A
QJXLVKsl8kwYnFYJf+xJ/CnmfZswjwllmRk3nAjf6Tgt4F1fzoKTq/MF7Uvk
LiQv21FHWbi45nfVGns2fouz4lfksfFKW1HEF3Bw0DHP+vV2DiQMTK+WNnMw
6rr7hMCWixXU8WeUx1w8EMhnfDDmwUNh+43aOzy4zY4bnW/MR9E95UTKG3If
S3uNkt+RnGi1pagTvXv5qUf6msmdhMwY+kJ0L8h7vWVwhIItklKPpcTIXsvw
HlkLqOgz9FsQMZPkq4bq/Iy5VKRGh/6rsKHiv8UXFWs9qDCVafZ6EkEF6jZ/
u3yKiin0p0MeBcSPDAht1xKuux3wOXGI+NS8dLe/IhrWRFefdjai4VqOy6OL
hB86/vWYfjhAAyf1UBLnJnmuXOVv8ZmGgm/Xs2PJHNbK/FrfYELH/m3UZ8u3
0jGZwPXvS6Pj2P54mWeEr+M2fR7oETIwNap3u89KBpJkn15dRfJadDJ6pLiK
gejM1eFFPMLXosgf651ITp/aPvw8hdzHhhMtwm9MHNBKnLd6PguvFz2PLzjI
wi3boOdLPrNwb9/AatO5bHT0zfvvVhIbBrMcI+oH2NDr/ceoW8WBVObbte/u
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
NkorZOpUXrCh8Fv8bLgKB95ls5Nc93LAMzkx7WcrB1n3JS5tW8rFOxWHxj/E
n/qXv5GonsGD5vQ/YZIneBj9Rd8gYPIR8vv303/7+fCWFnsvFBeAq+WyeLO1
AKcGf/mlHhFg8NiL0Y/VxPdHjGTqaqhIuVwRwyB6262K7av4TMUOBekL30kP
1ffMWLZnhAqX8cVN7lNpWFpz5dZeCRp+xp9+/oFw2uMam/cuC0kO0I7ZTBBO
MLI/9N+drTSc8snatzeehtUP0gNdr9Gw9e/jPvNnNFxPLvLS6aZhYXnKXRUu
HbQtgcqz5tBxf8TcxsCVDvkKNzW7A3S4VzrT9xXQsXJcePhtMx10zZoLSwUM
RFw12tVL8mG7ZkDR053kHgzlTDrJHMo9M2zXfGNgv5FrpsYskgt/Wr39NjFx
M+iTqe5VJoYr37kd7GSC3luWdVibhfgrv0tst7PQaq72u/cRC4GSk6VRfDYc
d4V6Kmxko+LQ4og+wtnby6I/sXgcCAsWtF7w5UBLbUrSk+ccfLzi8eimFhdP
uUv8409w4fi+uHH3Xy70vj0erQjgISB53cmkrzyIW/o+l3fh45ldm2P2ez7S
E++LP9IWIK/tctrwNgHe7cotk7onQGnhvY5P41SonKj+00H6TndGV4cZ0fvb
j6wFGoQD2B53xo9LEi4erar0mUnD+Ojx6AuECyRobpenW9DwiTnk/2E1DepU
/aHn/iQXHC9yW/cRjlOwC5AjeeDvGxYYWEJ+38sRpfcfaMhLfaplN07yeauo
okGOjgCLS8lBoMPvErNexpuOhJcd4m+T6JgbOCSVUULHjsm1zie76Jg4Otsn
XZqB5/5Vll+XMECtz1xoH8mARufn8X/El24tVTgwRuaQk5qyYpkKEzufzNUR
9yD6vyuNnnOJcAUvR77/KxPqJUp7FquyELbC7/nyABY4FLN6+SIW5GpL19dM
ZaM/8TR7twMbbZ3uyVYZbMx1TPlhOcFGEZI9LzpxULsiMz+kgIMVGlSnXiEX
GgGyt/R3cNF+3395UBPxqSjNqQ3LeDiS0+tx4T4PJenHekb0+ZDaYxsqn83H
+ZKp5ZpSAqi/v7Q5ZI0Aq3UKnx1OEYDX8jczpV2AGbQhbpM60Xlz3o8J4vO9
w1kV24neNfN0B48Z07Bhmb/agsU0BFSJ6tf9/98pJGVet7nTIK0in1YRTMO9
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
jTzQwv88oKeV
      "]}, {Automatic, Automatic}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["InterpolatingFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.9500000000000001`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.495`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.9500000000000001`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.495`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    InterpolatingFunction[{{0.01, 0.9500000000000001}, {0.005, 0.495}}, {
     5, 7, 0, {48, 50}, {4, 4}, 0, 0, 0, 0, Automatic, {}, {}, 
      False}, {CompressedData["
1:eJwtkD1MAkEQhc+WGlsIHXQm2MoroYWaikQthRZbroYWChpoaEisxMTCQEyM
kcSf6Bk0yh3/HNCdNTvje8kWuzvzZr4XK1zkTg8syzoy5zLcTbvlCnoR28/2
mmjURR2Yi3m5QshpFU9C10jkq/0gfou2uTmtOxwnRQMMgrj5uUdODR7glcXw
ESUpKw5hqZ6RceXjBbW+NLxCbZ03RGVs5B3nZ6IPyDbhroM/sQ0+kdIFRtAy
+wvDJ9E3DrXwB7pW/pfzx+wbk8Nlvwcd73r0mZBnSr8p953Rd44bzWNO/wU5
luRfkmeFjea0ItcaGkvSJ5+P/3w35Nwyry15d9gDvazAMg==
      "], CompressedData["
1:eJwtkD1MAkEQhc+W+mwhdNgKrbxSW6mpTJQSSKygvhZsoSNHYmOIiTE5TUwE
ghJ/+IcD8SRnC+1Rszu8l2yxuzNv5nvRi2zq8sAwjGN1imbj1C9cwwlb63On
hGpFBHVRLzWEXDt3ErrFUbrcCmJ3qKuba98jEdd6QDuIqZ9HpPYG+C9ow2fk
dVnuBYboFWe+/mjipiUNEFu3jYjuCneQudJ6g97GbLxjq6uCLpKywAekzPrE
95cIh1LYg6yV7nP+gH0DcgzZP4KM90f0GZNnQr8J953Sd4YnwZnR3yXHnPxz
8iywkZwW5PqBxBJfkm+Jfb6/5PSYl0feP+a7IvcKO5f0xL0=
      "]}, {Developer`PackedArrayForm, CompressedData["
1:eJwd2lMQGDyzANC/tm3btm3btq2vtm3btm3btu32nt7MnJk87Fsm2N0kaNiu
YtsA//vf/xqE+N//j3/zgAQiMEEISjCC8y8sJKEITRjCEo7wRCAikYhMFKIS
jejEICaxiE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN
7OQgJ7nITR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q
1KAmtahNHepSj/r/1oGGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje6
04Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxj
OjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7
O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5zhatc4zo3
uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOFr3zjOz/4
yS9+84e//Nv8AQhIIAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJ
LGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEku
cpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1q
U4e61KM+DWhIIxrThKY0ozktaEkrWtOGfwd4O9rTgY50ojNd6Eo3utODnvSi
N334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMks
ZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvYyS52
s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJLW5z
h7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+MkvfvOH
v/y7+AMQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5x
iUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJ
R34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalH
fRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg//0Zd+
9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYwl3nM
ZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCXfezn
AAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd73OcB
D3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl3+P/gAE
JBCBCUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQk
EYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQ
hSlCUYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGN
aUJTmtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96cN/9KUf/RnAQAYx
mCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGY
JSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgj
HOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc8
5RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85V/CH4CABCIwQQhK
MIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoy
kpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGK
U4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rT
gpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4
IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkr
WMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4
ySlOc4aznOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJ
K17zhre84z0f+MgnPvOFr3zjOz/4yS9+84e//Cv2BSAggQhMEIISjOCEICSh
CE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalI
TRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozilKAkpShN
GcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b
2tKO9nSgI53oTBe60o3u9KAnvehNH/6jL/3ozwAGMojBDGEowxjOCEYyitGM
YSzjGM8EJjKJyUxhKtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axh
LetYzwY2sonNbGEr29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs
5zjPBS5yictc4SrXuM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3v
eM8HPvKJz3zhK9/4zg9+8ovf/OEv/wr9AQhIIAIThKAEIzghCEkoQhOGsIQj
PBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9
GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwV
qEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGtrSjPR3o
SCc604WudKM7PehJL3rTh//oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOB
iUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GN
bGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc
4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jKM57zgpe84jVveMs73vOBj3zi
M1/4yje+84Of/OI3f/jLvyZfAAISiMAEISjBCE4IQhKK0IQhLOEITwQiEonI
RCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxk
ISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylSh
KtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr
3ehOD3rSi9704T/60o/+DGAggxjMEIYyjOGMYCSjGM0YxjKO8UxgIpOYzBSm
Mo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrWso71bGAjm9jMFray
je3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5yjvNc4CKXuMwVrnKN
69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v
/OAnv/jNH/7yr8EfgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKIT
g5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spOD
nOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa
1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570
ojd9+I++9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJ
LGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72Mku
drOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1u
c4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37z
h7/8+9wTgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKITg5jEIjZx
iEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spODnOQiN3nI
Sz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dahL
Perzf1Mxt3M=
      "], CompressedData["
1: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
TL0xFBwUaYu/ACqxY+E=
      "]}, {Automatic, Automatic}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["InterpolatingFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.9500000000000001`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.495`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.9500000000000001`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.495`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    InterpolatingFunction[{{0.01, 0.9500000000000001}, {0.005, 0.495}}, {
     5, 7, 0, {48, 50}, {4, 4}, 0, 0, 0, 0, Automatic, {}, {}, 
      False}, {CompressedData["
1:eJwtkD1MAkEQhc+WGlsIHXQm2MoroYWaikQthRZbroYWChpoaEisxMTCQEyM
kcSf6Bk0yh3/HNCdNTvje8kWuzvzZr4XK1zkTg8syzoy5zLcTbvlCnoR28/2
mmjURR2Yi3m5QshpFU9C10jkq/0gfou2uTmtOxwnRQMMgrj5uUdODR7glcXw
ESUpKw5hqZ6RceXjBbW+NLxCbZ03RGVs5B3nZ6IPyDbhroM/sQ0+kdIFRtAy
+wvDJ9E3DrXwB7pW/pfzx+wbk8Nlvwcd73r0mZBnSr8p953Rd44bzWNO/wU5
luRfkmeFjea0ItcaGkvSJ5+P/3w35Nwyry15d9gDvazAMg==
      "], CompressedData["
1:eJwtkD1MAkEQhc+W+mwhdNgKrbxSW6mpTJQSSKygvhZsoSNHYmOIiTE5TUwE
ghJ/+IcD8SRnC+1Rszu8l2yxuzNv5nvRi2zq8sAwjGN1imbj1C9cwwlb63On
hGpFBHVRLzWEXDt3ErrFUbrcCmJ3qKuba98jEdd6QDuIqZ9HpPYG+C9ow2fk
dVnuBYboFWe+/mjipiUNEFu3jYjuCneQudJ6g97GbLxjq6uCLpKywAekzPrE
95cIh1LYg6yV7nP+gH0DcgzZP4KM90f0GZNnQr8J953Sd4YnwZnR3yXHnPxz
8iywkZwW5PqBxBJfkm+Jfb6/5PSYl0feP+a7IvcKO5f0xL0=
      "]}, {Developer`PackedArrayForm, CompressedData["
1:eJwd2lMQGDyzANC/tm3btm3btq2vtm3btm3btu32nt7MnJk87Fsm2N0kaNiu
YtsA//vf/xqE+N//j3/zgAQiMEEISjCC8y8sJKEITRjCEo7wRCAikYhMFKIS
jejEICaxiE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN
7OQgJ7nITR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q
1KAmtahNHepSj/r/1oGGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje6
04Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxj
OjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7
O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5zhatc4zo3
uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOFr3zjOz/4
yS9+84e//Nv8AQhIIAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJ
LGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEku
cpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1q
U4e61KM+DWhIIxrThKY0ozktaEkrWtOGfwd4O9rTgY50ojNd6Eo3utODnvSi
N334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMks
ZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvYyS52
s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJLW5z
h7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+MkvfvOH
v/y7+AMQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5x
iUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJ
R34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalH
fRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg//0Zd+
9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYwl3nM
ZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCXfezn
AAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd73OcB
D3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl3+P/gAE
JBCBCUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQk
EYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQ
hSlCUYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGN
aUJTmtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96cN/9KUf/RnAQAYx
mCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGY
JSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgj
HOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc8
5RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85V/CH4CABCIwQQhK
MIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoy
kpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGK
U4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rT
gpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4
IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkr
WMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4
ySlOc4aznOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJ
K17zhre84z0f+MgnPvOFr3zjOz/4yS9+84e//Cv2BSAggQhMEIISjOCEICSh
CE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalI
TRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozilKAkpShN
GcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b
2tKO9nSgI53oTBe60o3u9KAnvehNH/6jL/3ozwAGMojBDGEowxjOCEYyitGM
YSzjGM8EJjKJyUxhKtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axh
LetYzwY2sonNbGEr29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs
5zjPBS5yictc4SrXuM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3v
eM8HPvKJz3zhK9/4zg9+8ovf/OEv/wr9AQhIIAIThKAEIzghCEkoQhOGsIQj
PBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9
GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwV
qEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGtrSjPR3o
SCc604WudKM7PehJL3rTh//oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOB
iUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GN
bGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc
4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jKM57zgpe84jVveMs73vOBj3zi
M1/4yje+84Of/OI3f/jLvyZfAAISiMAEISjBCE4IQhKK0IQhLOEITwQiEonI
RCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxk
ISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylSh
KtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr
3ehOD3rSi9704T/60o/+DGAggxjMEIYyjOGMYCSjGM0YxjKO8UxgIpOYzBSm
Mo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrWso71bGAjm9jMFray
je3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5yjvNc4CKXuMwVrnKN
69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v
/OAnv/jNH/7yr8EfgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKIT
g5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spOD
nOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa
1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570
ojd9+I++9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJ
LGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72Mku
drOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1u
c4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37z
h7/8+9wTgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKITg5jEIjZx
iEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spODnOQiN3nI
Sz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dahL
Perzf1Mxt3M=
      "], CompressedData["
1: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
bR8Opu3eaXz6Fgd2x/2YHQwu1OmB654kcRG9LmxP5g/Sf1Nafs3x5uHS8x8M
9fvkk7P13BgrPlwm/dviXsZHWJPW6alsAWw+GE7ed0yA4nw1s0c0IdYpbvFX
OyHEt55F0u0CEcZvkGxZeFkEdkZP5R0HMXw0/cK034oxull03ma6BNTEng0U
6b2hrztPv3lLus892uuAiRR83o+Nm/dKMdp3wKS0S4odxb1RgY4yNFkuNOoq
lWHb/k7bSMLtAbvnD7fMomPKEo+715aRntjQ5JcaTcf+2gdn5IrpqLypknP6
GR2bVtl75Y2lEK8oOceyoSBV5f24s4WCY3bEAIvwe+sjVY0x3ym4tcz6N03C
wN7IOnb+RgYKrn5ZwLjEwNoLU+hXhhhwrBBFevzHxLHzSy2GUpl46RA0o/QN
E/w9G96uJb23adxWB5sowo2EiGkmjSziM1vPeTLZCO5Pv3s1ko0/Cdaxgc/Y
cPukcydKxsH9kKX2SmkcBNjPiNTrJe/R0nK52Z30XsHoKc7XuOA8Xny0gMlD
jOMY+x9pPPRHckd5juKDwTz6b3ATH7/i3XP/dvGh/W1URayPADrD1woq2wQ4
0Lo9/tFKId5ZjAr4+kGIyNlrk+aEiLDo0cy4ycMijMzfVLw/VYxV1Iej/7Qk
+KJgEGa/SoKJUReG7c9LYOyn2k2NkSLQq7JSeZkUm7XX/6FdlkL2Lyr+8EQZ
Uu7T3p3cIsMyhahD0a9kSLg67mo16W7Dt5LOqIV0FO4t2dAYREfRRs7RjlQ6
mLFV7Weu0jF3H1uxuouOAOGGV3oGFIbzusLHu5HufvN0p3YK2YfuTIuXhN8O
vP5WAxXSFWnTd52bywD737GJ2/aR7lt1vNG7mYFWv6e/FxgwYVZzY8jJn4lL
B11d3M8zsW5H8lq/USxc0D5juMuFhajL/3g1BSy83c1ooA8Qr216kXTBiY2D
c67+SCxiQ7TVYPcZedITdefOWa3goCq6MNv+JgeRkcent9G5iLgYt5K9i4v8
ntqTJt+5eOttmsnw4kFoufH4xHs8fBjs8eJY8nGWH7B+xxk+TOx+PZvBEuD4
7dXDqUcFmO+Z35FjJMTlmm9OqQVCSB6V/c3mibDndOurbxdF2KKssfD2LDGc
mpZud39J/NY2zfbbNAlOuAk3uSRJsEC78XfoKwk8FCMUoyVS/CpdcurwLily
lfcr9r2X4q1aQ+ZlOxleb4lO1T8hw4UWK1OPccZ4yru5bim5T2F3erd/JLzI
13za4BZFh+aFEsHlo3T8atzg+vkhHf/6RwrXD9Hxu6el2EZGQS8cHQUBFLLj
5q01JPxGa+dotw4KZ9JD1RWZDKi5/ZFTXMOAxqqUmaanyXs8lK+M6WMg49Qp
+7fWTDibmf6yT2Kib5jx9MIzJnSU7b5LWCy8z8k4X7WVhevrA30DHrDA3rKs
YTqNja0OREO3sfF0/ukf6U/ITmZ9rLOQcHDq2z+POftI9xk9WfDmO7lbx2cJ
lckukpcmm3+s5GK/3Nr0dLKL7+/jZnPSedhlm72kjuzC6pywPTWUD8eoG4Yn
P/Mh/hdyQrZagJNhzhGe7QKM+exmb79KiKZXuzdQH4nXrsvazCK7uJVkMxI9
JILBbwvLgH1izI4s3KNGdvESmk49Kwi3P/4yCCmXwG3Hc/0bClJ0XXisMrRE
iji6T+yiC1KIBvRs+9Vl2KNnunbCBhniT/1pffxUhlNDi4q2TTfG4YSR867k
PtG1w99fIrwYbbVW3nkvHbO7qzvVz9OxcmLrliutpL9fWGy7rkHBcE2seIID
hcnub673xVCgNTQ86fn//9OJz+/MGabQEP4o7jYYmKc3Ks8ynoGkOrMZb4nX
Gqxf1ZujzUSWWYpd4HImNoy4f51ZyoRw46ejrL9MbN13TEV3HgseV3T4+nks
qK3JfTOjj4XLWjrbUuay8VZOZ5/OCTYijsZc/yTHwUCj0j7d5Rzs2bjS/1IV
B72PdLe9JbtQWahUc5zs4s5IojaD8GJH6UrdMMILOZMXy24QXnj/ORChM52P
kngN7WNnSe/djx4VzxHg0nqrDZ0F5B1iqlR66EKs0UqcUkt4scjmb/VhwotN
lZ2C45dEOFLS8lBjthjq5XqH9V+J8Wr3e4mcpQSGv9YkDO8inGj4G1PyUoIl
Z2zq+GIpHtoqHC1MkGKF6U+b/9ql6F8t+mM+Q4Yzh3uOlubLcDhbvalF0Rj2
BUPzf603hj9LX/fEOjp8wk1zf5LeK1a+tL32CB0dl5+M+kX4/YiqYVA/6fi4
rLTlAot4lOLuGQeWUZh6ReO/MYTfyvxrq3e1UBi8Zdt6fTLhxVGXw2uWks67
aK+3tICByjKZ3vZuBmIOx7+7bMpEv+/Ki/I7mYiZEjDGo5GJpq9PZRVGLNQ/
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
      "]}, {Automatic, Automatic}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["InterpolatingFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.9500000000000001`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.495`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.9500000000000001`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.495`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    InterpolatingFunction[{{0.01, 0.9500000000000001}, {0.005, 0.495}}, {
     5, 7, 0, {48, 50}, {4, 4}, 0, 0, 0, 0, Automatic, {}, {}, 
      False}, {CompressedData["
1:eJwtkD1MAkEQhc+WGlsIHXQm2MoroYWaikQthRZbroYWChpoaEisxMTCQEyM
kcSf6Bk0yh3/HNCdNTvje8kWuzvzZr4XK1zkTg8syzoy5zLcTbvlCnoR28/2
mmjURR2Yi3m5QshpFU9C10jkq/0gfou2uTmtOxwnRQMMgrj5uUdODR7glcXw
ESUpKw5hqZ6RceXjBbW+NLxCbZ03RGVs5B3nZ6IPyDbhroM/sQ0+kdIFRtAy
+wvDJ9E3DrXwB7pW/pfzx+wbk8Nlvwcd73r0mZBnSr8p953Rd44bzWNO/wU5
luRfkmeFjea0ItcaGkvSJ5+P/3w35Nwyry15d9gDvazAMg==
      "], CompressedData["
1:eJwtkD1MAkEQhc+W+mwhdNgKrbxSW6mpTJQSSKygvhZsoSNHYmOIiTE5TUwE
ghJ/+IcD8SRnC+1Rszu8l2yxuzNv5nvRi2zq8sAwjGN1imbj1C9cwwlb63On
hGpFBHVRLzWEXDt3ErrFUbrcCmJ3qKuba98jEdd6QDuIqZ9HpPYG+C9ow2fk
dVnuBYboFWe+/mjipiUNEFu3jYjuCneQudJ6g97GbLxjq6uCLpKywAekzPrE
95cIh1LYg6yV7nP+gH0DcgzZP4KM90f0GZNnQr8J953Sd4YnwZnR3yXHnPxz
8iywkZwW5PqBxBJfkm+Jfb6/5PSYl0feP+a7IvcKO5f0xL0=
      "]}, {Developer`PackedArrayForm, CompressedData["
1:eJwd2lMQGDyzANC/tm3btm3btq2vtm3btm3btu32nt7MnJk87Fsm2N0kaNiu
YtsA//vf/xqE+N//j3/zgAQiMEEISjCC8y8sJKEITRjCEo7wRCAikYhMFKIS
jejEICaxiE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN
7OQgJ7nITR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q
1KAmtahNHepSj/r/1oGGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje6
04Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxj
OjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7
O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5zhatc4zo3
uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOFr3zjOz/4
yS9+84e//Nv8AQhIIAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJ
LGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEku
cpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1q
U4e61KM+DWhIIxrThKY0ozktaEkrWtOGfwd4O9rTgY50ojNd6Eo3utODnvSi
N334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMks
ZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvYyS52
s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJLW5z
h7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+MkvfvOH
v/y7+AMQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5x
iUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJ
R34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalH
fRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg//0Zd+
9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYwl3nM
ZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCXfezn
AAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd73OcB
D3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl3+P/gAE
JBCBCUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQk
EYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQ
hSlCUYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGN
aUJTmtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96cN/9KUf/RnAQAYx
mCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGY
JSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgj
HOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc8
5RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85V/CH4CABCIwQQhK
MIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoy
kpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGK
U4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rT
gpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4
IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkr
WMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4
ySlOc4aznOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJ
K17zhre84z0f+MgnPvOFr3zjOz/4yS9+84e//Cv2BSAggQhMEIISjOCEICSh
CE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalI
TRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozilKAkpShN
GcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b
2tKO9nSgI53oTBe60o3u9KAnvehNH/6jL/3ozwAGMojBDGEowxjOCEYyitGM
YSzjGM8EJjKJyUxhKtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axh
LetYzwY2sonNbGEr29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs
5zjPBS5yictc4SrXuM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3v
eM8HPvKJz3zhK9/4zg9+8ovf/OEv/wr9AQhIIAIThKAEIzghCEkoQhOGsIQj
PBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9
GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwV
qEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGtrSjPR3o
SCc604WudKM7PehJL3rTh//oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOB
iUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GN
bGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc
4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jKM57zgpe84jVveMs73vOBj3zi
M1/4yje+84Of/OI3f/jLvyZfAAISiMAEISjBCE4IQhKK0IQhLOEITwQiEonI
RCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxk
ISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylSh
KtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr
3ehOD3rSi9704T/60o/+DGAggxjMEIYyjOGMYCSjGM0YxjKO8UxgIpOYzBSm
Mo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrWso71bGAjm9jMFray
je3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5yjvNc4CKXuMwVrnKN
69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v
/OAnv/jNH/7yr8EfgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKIT
g5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spOD
nOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa
1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570
ojd9+I++9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJ
LGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72Mku
drOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1u
c4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37z
h7/8+9wTgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKITg5jEIjZx
iEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spODnOQiN3nI
Sz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dahL
Perzf1Mxt3M=
      "], CompressedData["
1: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
G+Lw54TTxpVkP13YHNjuZIRfI7c3pvUbQd/3lGNzojH+9miurdNfgvxJqY72
T0tgsC0l2TvNBGnfPTreEYBIR2GRzwMCCb0PfPbqUGH/c7/vqhQqpp8zaGpX
oaHCKWvLrlQa8rWzLidr0MEKrlr87yIdcfOt3xjyGFi3jvFuYRUDNnIvW9NX
MFHuc45b18WE8bFFNde2suBu9PcZprIRoDD6lEruqJfZJl1EGhuxRQ7slZ/Z
CNz+7WAZn4OzSX1zNhzgoHchbc++Fxxk92k2K1O4KDeiZPAjyVxsDZOfIPds
g03VxyiChzPBr8637+fBN/PKoQVdPOQdS328juT29trpZx6f4eNYlA87ZIKP
2SYRkpt9SL9jRXS+rhNg2r/739+yhNg+o7X39Fkhdjzb6knIiCBz98D+67tF
sK7uveTXL8Kv+DwHjw36iDPLXt7YrY8bjQNTXq8VI/5Qdm7lJzGYzu2h+ZtJ
v3Oa1tc8bIB5yVWizQcN8XxsqVMlye3cxV4npK8bYS1f8X3CKmOsHFZ2yhw2
xiOv0iPHspbgkkKmVdFKE8Suao9mTwc6E7qaJP2A3l8ShdveEKj+8Ijz1YyK
gMTcu3q3qBjJOPyhwJAGUdD8kHdkTw26mRwwsKfjunZOR94bOqYtzH1VHsjA
TOLhLEty1279sej96gQmTDJWRE35j4Vj7bdmeNxg4cN/nDBLMhf3ZrvefLuN
jYUGKo/jq9lIOveI7anEwaYdm+4F+nDw40Z33qMSDgJL+ZuSSM/LP9f+88Vq
LhR1DGMKi0hecKylGFI86OV8/BrszUNibv2KeJLbxtwY7dNqZB5+helf286H
UlOX00A76duh89wjDAVYH6jp454lwFJqTuPdmULgdFdoZZgQu25vrt37QQgl
esSHxatE+F8Fd/5IdcLFcVyFECoxlJAlcu/l7vu97od4JK2oyFKIQpaJjC1L
j2lkySVpimxJtCBZUs1UKmVrokQbkmKsk9BMqPnOH3He57x+OW/zo560NnIR
8V4xs0TMg/+W0YDuOh7eM+UXnGDz4eb5c8Z0LXHXKr9iQCQAnamxtOihAJwW
50sOjkLcDVlNTfsgBPmQYYM0RgSak15vgZYYkU46d+RuihF9W75ZmdjbEfQr
6oqqEiwZVB5zvCdB/0XfWyXEOjn/eOlV8zwAAmbstilTFH7uzvrVk/C3QKUn
6S0JR9fXvxL7kDHC6JBnTf73L+FvynQCBYSMBMdWmCFxeI3B8RLCe//cvvxR
YI6uw+N+ZU+JXtUNFo3up+IPKVfGX4aGIV5k1X1iLipD/PZr5dIQu7/swpER
GsTO8yJFER3fPSXU9jQ6nilOlY8Qznsg128azGYg18Z196EUBmRL17spv2fg
o4D7wEnERE/WdJ33aSaWZ5ctdphiwvnToC3fkYX5Sd9RZjULew8me7trstGp
Pc7oiGEjxdJQo3KADZ0Tb7V+2MqBtX7HPaPbHMTNSMnfyFz4ZV00b8zjIijG
K6lInYfElmS5W2k8CBOOVfKV+AiM3bTIPpkP26IyHV1VAVSfesl8OCWAmt/T
tuf6QjTZnl9mXCVE8uwZRQ1bEUihi+X6+0ToWEqub48To10httzMyAIp8tbX
rZ9YgCvX4xoQK0HBmtYNsauAFx++aJlFAhmcLX3hrwFDb7LuAhUS7KNczxQn
kOBedIiUvoiMZ04rXculZATa19VkGFCIeyu/910tBSEe5tq3N5lBGN2n/fy9
GXZXjuTpxZjDpfL3d1UaVESdPppWWUmFmn6TUqExDXtEUpnmwzQIXs+qDj+k
oS9r5w4tTTp+lBbLHPSj49zyDqs5wnnHL7S59i1noDhP+Qr1AAMTiYMtC+4y
sIfrcSGI2Nuz5AXpJ8KY0LX23R/VTvTKaaLSnsbCprmeq6szWNC+2RWjMMVC
wt7PbLILG6bzlxWKCFeMO7/YnULiQCf885D8aQ7OfzMYYstzsUAiRxJGcIHT
fVbCMS5GQ/ZVufnwEEQOWPq4j4d51lpu6R4+FCb040n9fGisr/sUe0AAJf6u
+G7CFa13QrcGJgjhnV78T7i6CB6Kr3oZV0TIaz0a379BDMaX0q6WYTEo2bQm
fqYFboelZMdIJOiOPeA5PClB85P0nuCdQIlMyLq+WiBlTUzj7CpLLGd/fy41
JiFcu23O4DwJej9Je5zIZHxIdPz2n/syyV9/0NpBQdq6NEX9cQrW1Egv+ieZ
IaGts+AWcdeqOZn6ad4l9rdJ/b5cdyrc7a2nw+aouLby+cYDW2iQx+ZtIfk0
1LVPBQR8okFFLW3fIWs65vXKn577lY6jwb2r5cfp8Fh9Lf++NQMud/5fPZ7L
QPZv3Jf5MwzYhPW0TmxngqKUUv6lnInoI2Pa7SospMtWbM0OYkFEqZR4Ea54
SdlzaxuHDZOcA8mx59jIGlRKVVzMgecl565loUSXGm68qX7Hwa6y6SRNok/S
dXR/t0dctP2s0VVqwcPXb0VaRvU8RK/7nv2Fw8e0TbXi1ht8vBzuvuwsFoDh
Wxxm0yhA418Ld9gRfUo91RaVMyCEer372fAoEY6H2EtWaohxWcVybWM1MRdK
42ceuFhgb+GGP/fKSpDbENE5Wi3Bfvl5lT42cF+xNzE3i+jTFqq0ZwZYSPUc
fONmiWq//t+WWJKgvl3oQGkkoUIriDXjRIbzQdOEM2NknIgwVRw6Tuzv4dG4
ThMzNFV0ZdY2msG8fYDp62uOJDuaw4w8FSc27/w7vZSKAbudrVVraZh6fjXq
xU80PJkM5DxppuHDL8Fj1bp0VL7/n86FUDrO3pnouNFE3LODiXcV9RlYbtrp
di2SgczAR/JNzxiYM8gz9acy0RzZuLc8lfBdfO3ZihEmqle1CpIIV1jo7hI4
VrAQ5qtuR1Fn48pkwBg1mo3BNU3F0USftjj6yJpv48A48u0r3985SOCMONhS
uYT3cjQni7g4OOIalbKSBxcH6xz+SR58FKZPGi3jQ3c49kK4lI8c6V0/N3UB
ZpbUKcjlCuClvvFQkYkQoT+SzvnVCUGN9G/JtBfBsiK102VAhGKTNzHfEsQY
nph/+IDoU69Si9t0qwVObixd2EO4oqDBQ9ZPE4iveRpwKgzgKxmvN+oEsr6y
LO34lrC5aGEsKrREiMH1l7FuJBi0Kpu/HibB5Mj+kxnxZFgP+0076lFQNDz2
0egeBVGCuXqjfWaIS8zZ9WixOcpSyq3mL5uDHnm0YnAb4bw2246bM1RIC0QP
uom58HYsU5U9T0O4dYTa/BdiLhJX9PRtpuPwyWc1LcV01IoDSS/nCHerfrcw
2smAZ2ph1qNKBjDfkP1WmYlflliVxPsz4XMxzaqliYn3PnW0bhILspo1BQ1p
LOwIom8vmWTByte5Kp/ok02kqkJrAxuG/O8pduYceIlH07m5HAS9KSyoVeZC
4jpVNhTHRXCyyepP01x0qRmumA7iwXC2K057hIdFi+GU5s/HHg+fqsNjfPx5
Y0h3YZgAXP1jdV7fBNgdZhTUnCqElp2SXbCeCKepA6XJtSK457idcnEQY65e
Z7nOZzEeJ9LDV52xwCOzztc51hIcCJk99te0BJcMQ6/XEn2yLbr5R20N8PFN
QoapliWOe8+Xr4+1BKl2w6x4yBL/AgRlD+s=
      "]}, {Automatic, Automatic}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["InterpolatingFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.9500000000000001`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.495`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.9500000000000001`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.495`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    InterpolatingFunction[{{0.01, 0.9500000000000001}, {0.005, 0.495}}, {
     5, 7, 0, {48, 50}, {4, 4}, 0, 0, 0, 0, Automatic, {}, {}, 
      False}, {CompressedData["
1:eJwtkD1MAkEQhc+WGlsIHXQm2MoroYWaikQthRZbroYWChpoaEisxMTCQEyM
kcSf6Bk0yh3/HNCdNTvje8kWuzvzZr4XK1zkTg8syzoy5zLcTbvlCnoR28/2
mmjURR2Yi3m5QshpFU9C10jkq/0gfou2uTmtOxwnRQMMgrj5uUdODR7glcXw
ESUpKw5hqZ6RceXjBbW+NLxCbZ03RGVs5B3nZ6IPyDbhroM/sQ0+kdIFRtAy
+wvDJ9E3DrXwB7pW/pfzx+wbk8Nlvwcd73r0mZBnSr8p953Rd44bzWNO/wU5
luRfkmeFjea0ItcaGkvSJ5+P/3w35Nwyry15d9gDvazAMg==
      "], CompressedData["
1:eJwtkD1MAkEQhc+W+mwhdNgKrbxSW6mpTJQSSKygvhZsoSNHYmOIiTE5TUwE
ghJ/+IcD8SRnC+1Rszu8l2yxuzNv5nvRi2zq8sAwjGN1imbj1C9cwwlb63On
hGpFBHVRLzWEXDt3ErrFUbrcCmJ3qKuba98jEdd6QDuIqZ9HpPYG+C9ow2fk
dVnuBYboFWe+/mjipiUNEFu3jYjuCneQudJ6g97GbLxjq6uCLpKywAekzPrE
95cIh1LYg6yV7nP+gH0DcgzZP4KM90f0GZNnQr8J953Sd4YnwZnR3yXHnPxz
8iywkZwW5PqBxBJfkm+Jfb6/5PSYl0feP+a7IvcKO5f0xL0=
      "]}, {Developer`PackedArrayForm, CompressedData["
1:eJwd2lMQGDyzANC/tm3btm3btq2vtm3btm3btu32nt7MnJk87Fsm2N0kaNiu
YtsA//vf/xqE+N//j3/zgAQiMEEISjCC8y8sJKEITRjCEo7wRCAikYhMFKIS
jejEICaxiE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN
7OQgJ7nITR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q
1KAmtahNHepSj/r/1oGGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje6
04Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxj
OjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7
O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5zhatc4zo3
uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOFr3zjOz/4
yS9+84e//Nv8AQhIIAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJ
LGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEku
cpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1q
U4e61KM+DWhIIxrThKY0ozktaEkrWtOGfwd4O9rTgY50ojNd6Eo3utODnvSi
N334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMks
ZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvYyS52
s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJLW5z
h7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+MkvfvOH
v/y7+AMQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5x
iUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJ
R34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalH
fRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg//0Zd+
9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYwl3nM
ZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCXfezn
AAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd73OcB
D3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl3+P/gAE
JBCBCUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQk
EYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQ
hSlCUYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGN
aUJTmtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96cN/9KUf/RnAQAYx
mCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGY
JSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgj
HOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc8
5RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85V/CH4CABCIwQQhK
MIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoy
kpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGK
U4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rT
gpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4
IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkr
WMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4
ySlOc4aznOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJ
K17zhre84z0f+MgnPvOFr3zjOz/4yS9+84e//Cv2BSAggQhMEIISjOCEICSh
CE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalI
TRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozilKAkpShN
GcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b
2tKO9nSgI53oTBe60o3u9KAnvehNH/6jL/3ozwAGMojBDGEowxjOCEYyitGM
YSzjGM8EJjKJyUxhKtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axh
LetYzwY2sonNbGEr29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs
5zjPBS5yictc4SrXuM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3v
eM8HPvKJz3zhK9/4zg9+8ovf/OEv/wr9AQhIIAIThKAEIzghCEkoQhOGsIQj
PBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9
GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwV
qEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGtrSjPR3o
SCc604WudKM7PehJL3rTh//oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOB
iUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GN
bGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc
4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jKM57zgpe84jVveMs73vOBj3zi
M1/4yje+84Of/OI3f/jLvyZfAAISiMAEISjBCE4IQhKK0IQhLOEITwQiEonI
RCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxk
ISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylSh
KtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr
3ehOD3rSi9704T/60o/+DGAggxjMEIYyjOGMYCSjGM0YxjKO8UxgIpOYzBSm
Mo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrWso71bGAjm9jMFray
je3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5yjvNc4CKXuMwVrnKN
69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v
/OAnv/jNH/7yr8EfgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKIT
g5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spOD
nOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa
1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570
ojd9+I++9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJ
LGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72Mku
drOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1u
c4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37z
h7/8+9wTgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKITg5jEIjZx
iEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spODnOQiN3nI
Sz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dahL
Perzf1Mxt3M=
      "], CompressedData["
1:eJwUm2c41n8fhiWiRJvMEqFw7z247DRISSIlKUmFSnZZZZSUlNmQxJ+S0ERE
Q8kslJKMSINKSZGe7/Pqd9z3y9/HdZ3X6ThuTTfvNdsmSUhIuE6VkIjSitHP
f2eI6/MYrfeGDLEnKWZ+sQIFOy5+yi/jUaB09fXXQ14U6BQ+3mqaTcGlR2ln
HvdS0LVq8xHKEirClm6d1uZLRWfIi98296j49Kzi+CIZGrjJU5UqaTTM3BWx
/LMzDT/Szk9Ji6FBVTLX4v5NGlYNXp28qY+GGR62e72V6Dg5z8D9lzUdkhdt
3v0OpWN74+XmkGI6Pkr9aYr+SEdI0OefWloMrN28+o6zCwPuVWPvBakMjC5d
ElPfysDjVd/7tRWZ0Mt9Fb1qPROZnhd1N6Qxsffjl6cbOpl4GohqNx0WsItW
HuPNguP9jMauuyyU73176rAsGxj/TY93ZEN1Sn/knHw2IrXnGLIlOMiZsbZ0
piN5zo56+qiIA54JxSBoJhfaJdFzVvtyMX/+ckufFi72F75dIy3mYfOMoGei
XB5qy17GWynxEbzXc7JTHB9uC5pCr0wSIDj7VXxwqAAKtVO8ZCcEKOs32p4a
KQT1AHVnkIIIIcmfX3R8MMSYud0e5l9DJAlkIgbUKTgzY4f/vOXkLqwgX/1D
FHg1+a9wKKXgR7XJsRV/KXius01dy5yKMT3OcX4CFRc6poWovqXiBW1bjXA+
DYvn/wqdZkZDmKWs33ZvGmjW5yZMz9LAuBebkPKMhtTOsPNb/9IQ4vLhVRaV
DlH6SLTzVjoYere0ElLIXQwuylo00DGp8Cv/sAwDW7iG/A0mDEwoqQzUhjCQ
kawVNHCHgT/DzpsqRhnQ1z1utpHPRPh659mNwUwEH7v4Tb+SiTUFeasiprAg
fft6d58NC0uts5/uSWXhP/ueeFofC0Y7fnHM2WwcS3P2rD5CnjH2wU/a2TjR
rXBqH52DsxnMx+/iOLgwnWPG6OdgT0OB91FLLtI6tRfM/o+L32vvVAwq8PDs
hDBxZQAP72aa9m94z0NC35jbMgc+7FOPLltVy0f/m1d1meYCPF7xKyCySoDM
xStjWBZClIxN9Rh/JoTCy3iqnpMIFzWtMwTfDHFiyrxre6ZQEHNDiuamR0Hm
fIdz0x0o+PyveXXlMQqaX+n8Pf2Ugr8j2m/5ClSEJls4VjhQIdp8WyI8iwqb
vqnPp/2gItar7aG0Ng3mWd7u2bY07E1euaQphIZol6tlIfk09Jg6fbnwmnz/
3eKYQJ6O6R1F6dagQ6bv5u3G/XQErDcseJFHh9g1ZvHGbjqSog/v9lZlwPoY
1W6+AwPrM4VjWxIZ+E/ye7djIwNaumcrp81kIn+lXMwROyaumijueJPEBOuI
b716OxNHz3G9XTRZaPZut722k4XFvcIWvZsspKfWv3g3mY1nzJLcobVsNLl3
WXpfZmOE6+ocPMZGn8HLbfS1HHzcndheeJUDl0tGVqpyXOxY9Cw4yYuLYMPS
W6YNXNSpOb+x4fDQFh16qfcCD+2+om7GDJKHiNhqr3A+0gIcNR7+4uPm1/UP
A/YK8IS9uu/BNwGucHbt++wnxJk7PSncf0I0Tr6LH/EiGAyrP636bQjPm4F1
XTMoMMifdFaTSYGiUvTTDW4UnPw6evxOGrnTQV2WVTsFHucfVWQvoCJAZg96
Pan4HJcU5nybitz768NXSNNQ88zj9SLSU/RbWt3JG2l4YHunKTmOBpGfTJHi
XRo8ZqQXyX+iIb+LOzlInY4t7EuTNtrRoZL04OLNI3T0Gl2WTiinI+5qnvbn
n3RMzSrJaKUyEGdSEOXoxYDHHy+70FwGbjkoVdv1MzC3QqW9R5eJu6HKzaY7
megXftA8VMDEi4+PDuX9IPf4u26gTcTCtF+fClSjWbC+Pivi6HMW6uynRBst
YkPqtonnqn1sbPOa2Nv8iI0cpfc5A2ocFP6e1FPox8GVFuGoVRMHMWaJrxqp
XCj7BlR6n+Tiuv515xUjXBz8uUgyfhMPKgWGn1yf8rD4nubuET4fn+VPmoZd
5WPKi1VtrMUCVLyXP2eTKcAP6Wfe0xcJYaBOG7meI8S5rQGLYhgi9LamF3VU
iVBYvavEX5KClt86w8eVKXBpmHRzqREF71/OjJXwpoDPLWer/kfBu8R+lz0f
KdB69+/bKToVpbsl350JpSJ/3aBTfR0V7pPSa7tn0vDRJ/bLaREN+z00f/d6
0nDOID6+PIXwpP6DytwnNEiMBPK6/9AQZRsdtJhCx+pSpfNv3ehY9b1zZGYq
Hak/Tozeb6Qj2uPg99GpDEzd4tJ8z5yByXJuf9XDGfDceou1qIKBfQYBkS8n
GDj/biHLFkxwf0s/Ox3JhO3parnyGias0j8Mt85g4VyUY92IIws29Gls+iUW
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
      "]}, {Automatic, Automatic}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["InterpolatingFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.9500000000000001`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.495`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.9500000000000001`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.495`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    InterpolatingFunction[{{0.01, 0.9500000000000001}, {0.005, 0.495}}, {
     5, 7, 0, {48, 50}, {4, 4}, 0, 0, 0, 0, Automatic, {}, {}, 
      False}, {CompressedData["
1:eJwtkD1MAkEQhc+WGlsIHXQm2MoroYWaikQthRZbroYWChpoaEisxMTCQEyM
kcSf6Bk0yh3/HNCdNTvje8kWuzvzZr4XK1zkTg8syzoy5zLcTbvlCnoR28/2
mmjURR2Yi3m5QshpFU9C10jkq/0gfou2uTmtOxwnRQMMgrj5uUdODR7glcXw
ESUpKw5hqZ6RceXjBbW+NLxCbZ03RGVs5B3nZ6IPyDbhroM/sQ0+kdIFRtAy
+wvDJ9E3DrXwB7pW/pfzx+wbk8Nlvwcd73r0mZBnSr8p953Rd44bzWNO/wU5
luRfkmeFjea0ItcaGkvSJ5+P/3w35Nwyry15d9gDvazAMg==
      "], CompressedData["
1:eJwtkD1MAkEQhc+W+mwhdNgKrbxSW6mpTJQSSKygvhZsoSNHYmOIiTE5TUwE
ghJ/+IcD8SRnC+1Rszu8l2yxuzNv5nvRi2zq8sAwjGN1imbj1C9cwwlb63On
hGpFBHVRLzWEXDt3ErrFUbrcCmJ3qKuba98jEdd6QDuIqZ9HpPYG+C9ow2fk
dVnuBYboFWe+/mjipiUNEFu3jYjuCneQudJ6g97GbLxjq6uCLpKywAekzPrE
95cIh1LYg6yV7nP+gH0DcgzZP4KM90f0GZNnQr8J953Sd4YnwZnR3yXHnPxz
8iywkZwW5PqBxBJfkm+Jfb6/5PSYl0feP+a7IvcKO5f0xL0=
      "]}, {Developer`PackedArrayForm, CompressedData["
1:eJwd2lMQGDyzANC/tm3btm3btq2vtm3btm3btu32nt7MnJk87Fsm2N0kaNiu
YtsA//vf/xqE+N//j3/zgAQiMEEISjCC8y8sJKEITRjCEo7wRCAikYhMFKIS
jejEICaxiE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN
7OQgJ7nITR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q
1KAmtahNHepSj/r/1oGGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje6
04Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxj
OjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7
O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5zhatc4zo3
uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOFr3zjOz/4
yS9+84e//Nv8AQhIIAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJ
LGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEku
cpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1q
U4e61KM+DWhIIxrThKY0ozktaEkrWtOGfwd4O9rTgY50ojNd6Eo3utODnvSi
N334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMks
ZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvYyS52
s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJLW5z
h7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+MkvfvOH
v/y7+AMQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5x
iUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJ
R34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalH
fRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg//0Zd+
9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYwl3nM
ZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCXfezn
AAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd73OcB
D3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl3+P/gAE
JBCBCUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQk
EYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQ
hSlCUYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGN
aUJTmtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96cN/9KUf/RnAQAYx
mCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGY
JSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgj
HOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc8
5RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85V/CH4CABCIwQQhK
MIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoy
kpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGK
U4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rT
gpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4
IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkr
WMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4
ySlOc4aznOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJ
K17zhre84z0f+MgnPvOFr3zjOz/4yS9+84e//Cv2BSAggQhMEIISjOCEICSh
CE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalI
TRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozilKAkpShN
GcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b
2tKO9nSgI53oTBe60o3u9KAnvehNH/6jL/3ozwAGMojBDGEowxjOCEYyitGM
YSzjGM8EJjKJyUxhKtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axh
LetYzwY2sonNbGEr29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs
5zjPBS5yictc4SrXuM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3v
eM8HPvKJz3zhK9/4zg9+8ovf/OEv/wr9AQhIIAIThKAEIzghCEkoQhOGsIQj
PBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9
GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwV
qEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGtrSjPR3o
SCc604WudKM7PehJL3rTh//oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOB
iUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GN
bGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc
4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jKM57zgpe84jVveMs73vOBj3zi
M1/4yje+84Of/OI3f/jLvyZfAAISiMAEISjBCE4IQhKK0IQhLOEITwQiEonI
RCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxk
ISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylSh
KtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr
3ehOD3rSi9704T/60o/+DGAggxjMEIYyjOGMYCSjGM0YxjKO8UxgIpOYzBSm
Mo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrWso71bGAjm9jMFray
je3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5yjvNc4CKXuMwVrnKN
69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v
/OAnv/jNH/7yr8EfgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKIT
g5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spOD
nOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa
1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570
ojd9+I++9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJ
LGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72Mku
drOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1u
c4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37z
h7/8+9wTgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKITg5jEIjZx
iEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spODnOQiN3nI
Sz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dahL
Perzf1Mxt3M=
      "], CompressedData["
1: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
YN497d2qycLGagMHdx8WVrb4beNWsXAlIZ8fZsRGUa9Sx+YINuqeb5Pv/M5G
Xv3EUZNVHDB39/63Lp8D7uu/2WcNuHjdy47svcAlvimTHEv4XRYxPzovkIeA
WUYbAn/y8Ojp4VZ5wm/Zr5dfnhvgg23yc3y5nwDjU1e+3TEuQIPH36WGZ4Qw
HZHL/aQKGKiwPhe5Ar5KHiUOd4DClS7nn44Ct//yvRYTz2BYGZ5+nSyCvnz5
hXJpMV7mrRhy3iiGjv55rkhEeurzHZXjzhSYVnhEGxCOS9S7RubfpOCJe1R8
3hvih5+L3ZdLE99bwT/dyaSixrvt4Rjhhu6OIQvaHSo+dK2LX9VBxVtGzj32
PBru/tIOeLuZBkX1mtvTEmlo7u4K/91Jw9Oj414njEk+lieKC0hPaV2NqU/M
oyNT1cTORoaBYzNaCvNXMHBL7sHPCdcZoB4L4y/5xkB2eaWzPZ+JiRo16w4T
z6ieUVxY9oUJtaZdEiGfhbrQIwpSl8kd3G0uz/nBAkP/XPtDezZkPGp3fbzP
xh3vyeaPNTiQrYtb4kb4va33akFPBwcra3iep1Zx8UD+5yOnUi6+RBh4+DN4
KFjQFqx1j4fPSa1pWxfwcWfQVngqkQ+5hwVhmQsEGJ7eoDgtXYCJtocKOlhC
zEr7tWpruRCJh66s8FwCPLjXtZtG/Lvj5qKo/FfAVpfyjfNmEz5Q/A7E7BPh
+srwCPPXIjS3Rda4LBDjwx9jW4WTYvyrnvSfHeHGn/2BHzPWET+nbEhKIz6u
e/7cqtl3KHgoc2WyfjPZwX+64rVUqGQH6n2cbkFFfbzKjKAgKqZFXVMazyX9
9bwiYeMIFevWJRqfYNDww/F33+oDNPQ+2p5cmUv8b9g0uWOMhk03BxRvS+i4
sJISphhBh0Xoj+vz64gHSjcpjukQbn+rCIjbSbj9Sok7M4+Bp+pHtAMmM3Ei
1drpnRsTI7vjfHhZTJSqTHAplWNhCAsYR9xZSIwxvhqaT/ihwTs4MJON/Wra
Zk0H2UieL0x3ec/Gul/z9p0G6aWcn1nnUjjYfW3V3ohpXNjfj7wZc5QL6Ssw
bxnkYp3qvbMh23jw9NPST2/lQb8/bO5pVz6ejuj5L3vPx++ogamaGwRY77dZ
xaRTgPIHginFPkIoCzxKTkgDe68G/k0i/HYdcORuvUo8vHPCcGcPcMNba8Uq
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
9MRprcW/fQd2Vw==
      "]}, {Automatic, Automatic}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["InterpolatingFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.9500000000000001`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.495`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.9500000000000001`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.495`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    InterpolatingFunction[{{0.01, 0.9500000000000001}, {0.005, 0.495}}, {
     5, 7, 0, {48, 50}, {4, 4}, 0, 0, 0, 0, Automatic, {}, {}, 
      False}, {CompressedData["
1:eJwtkD1MAkEQhc+WGlsIHXQm2MoroYWaikQthRZbroYWChpoaEisxMTCQEyM
kcSf6Bk0yh3/HNCdNTvje8kWuzvzZr4XK1zkTg8syzoy5zLcTbvlCnoR28/2
mmjURR2Yi3m5QshpFU9C10jkq/0gfou2uTmtOxwnRQMMgrj5uUdODR7glcXw
ESUpKw5hqZ6RceXjBbW+NLxCbZ03RGVs5B3nZ6IPyDbhroM/sQ0+kdIFRtAy
+wvDJ9E3DrXwB7pW/pfzx+wbk8Nlvwcd73r0mZBnSr8p953Rd44bzWNO/wU5
luRfkmeFjea0ItcaGkvSJ5+P/3w35Nwyry15d9gDvazAMg==
      "], CompressedData["
1:eJwtkD1MAkEQhc+W+mwhdNgKrbxSW6mpTJQSSKygvhZsoSNHYmOIiTE5TUwE
ghJ/+IcD8SRnC+1Rszu8l2yxuzNv5nvRi2zq8sAwjGN1imbj1C9cwwlb63On
hGpFBHVRLzWEXDt3ErrFUbrcCmJ3qKuba98jEdd6QDuIqZ9HpPYG+C9ow2fk
dVnuBYboFWe+/mjipiUNEFu3jYjuCneQudJ6g97GbLxjq6uCLpKywAekzPrE
95cIh1LYg6yV7nP+gH0DcgzZP4KM90f0GZNnQr8J953Sd4YnwZnR3yXHnPxz
8iywkZwW5PqBxBJfkm+Jfb6/5PSYl0feP+a7IvcKO5f0xL0=
      "]}, {Developer`PackedArrayForm, CompressedData["
1:eJwd2lMQGDyzANC/tm3btm3btq2vtm3btm3btu32nt7MnJk87Fsm2N0kaNiu
YtsA//vf/xqE+N//j3/zgAQiMEEISjCC8y8sJKEITRjCEo7wRCAikYhMFKIS
jejEICaxiE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN
7OQgJ7nITR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q
1KAmtahNHepSj/r/1oGGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje6
04Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxj
OjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7
O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5zhatc4zo3
uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOFr3zjOz/4
yS9+84e//Nv8AQhIIAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJ
LGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEku
cpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1q
U4e61KM+DWhIIxrThKY0ozktaEkrWtOGfwd4O9rTgY50ojNd6Eo3utODnvSi
N334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMks
ZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvYyS52
s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJLW5z
h7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+MkvfvOH
v/y7+AMQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5x
iUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJ
R34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalH
fRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg//0Zd+
9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYwl3nM
ZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCXfezn
AAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd73OcB
D3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl3+P/gAE
JBCBCUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQk
EYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQ
hSlCUYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGN
aUJTmtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96cN/9KUf/RnAQAYx
mCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGY
JSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgj
HOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc8
5RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85V/CH4CABCIwQQhK
MIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoy
kpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGK
U4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rT
gpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4
IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkr
WMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4
ySlOc4aznOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJ
K17zhre84z0f+MgnPvOFr3zjOz/4yS9+84e//Cv2BSAggQhMEIISjOCEICSh
CE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalI
TRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozilKAkpShN
GcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b
2tKO9nSgI53oTBe60o3u9KAnvehNH/6jL/3ozwAGMojBDGEowxjOCEYyitGM
YSzjGM8EJjKJyUxhKtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axh
LetYzwY2sonNbGEr29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs
5zjPBS5yictc4SrXuM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3v
eM8HPvKJz3zhK9/4zg9+8ovf/OEv/wr9AQhIIAIThKAEIzghCEkoQhOGsIQj
PBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9
GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwV
qEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGtrSjPR3o
SCc604WudKM7PehJL3rTh//oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOB
iUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GN
bGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc
4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jKM57zgpe84jVveMs73vOBj3zi
M1/4yje+84Of/OI3f/jLvyZfAAISiMAEISjBCE4IQhKK0IQhLOEITwQiEonI
RCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxk
ISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylSh
KtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr
3ehOD3rSi9704T/60o/+DGAggxjMEIYyjOGMYCSjGM0YxjKO8UxgIpOYzBSm
Mo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrWso71bGAjm9jMFray
je3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5yjvNc4CKXuMwVrnKN
69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v
/OAnv/jNH/7yr8EfgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKIT
g5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spOD
nOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa
1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570
ojd9+I++9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJ
LGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72Mku
drOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1u
c4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37z
h7/8+9wTgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKITg5jEIjZx
iEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spODnOQiN3nI
Sz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dahL
Perzf1Mxt3M=
      "], CompressedData["
1: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
ygz8XlebStG+sNTDPVmKfwFH0cjO
      "]}, {Automatic, Automatic}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["InterpolatingFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.9500000000000001`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.495`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.01`", ",", "0.9500000000000001`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005`", ",", "0.495`"}], "}"}]}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    InterpolatingFunction[{{0.01, 0.9500000000000001}, {0.005, 0.495}}, {
     5, 7, 0, {48, 50}, {4, 4}, 0, 0, 0, 0, Automatic, {}, {}, 
      False}, {CompressedData["
1:eJwtkD1MAkEQhc+WGlsIHXQm2MoroYWaikQthRZbroYWChpoaEisxMTCQEyM
kcSf6Bk0yh3/HNCdNTvje8kWuzvzZr4XK1zkTg8syzoy5zLcTbvlCnoR28/2
mmjURR2Yi3m5QshpFU9C10jkq/0gfou2uTmtOxwnRQMMgrj5uUdODR7glcXw
ESUpKw5hqZ6RceXjBbW+NLxCbZ03RGVs5B3nZ6IPyDbhroM/sQ0+kdIFRtAy
+wvDJ9E3DrXwB7pW/pfzx+wbk8Nlvwcd73r0mZBnSr8p953Rd44bzWNO/wU5
luRfkmeFjea0ItcaGkvSJ5+P/3w35Nwyry15d9gDvazAMg==
      "], CompressedData["
1:eJwtkD1MAkEQhc+W+mwhdNgKrbxSW6mpTJQSSKygvhZsoSNHYmOIiTE5TUwE
ghJ/+IcD8SRnC+1Rszu8l2yxuzNv5nvRi2zq8sAwjGN1imbj1C9cwwlb63On
hGpFBHVRLzWEXDt3ErrFUbrcCmJ3qKuba98jEdd6QDuIqZ9HpPYG+C9ow2fk
dVnuBYboFWe+/mjipiUNEFu3jYjuCneQudJ6g97GbLxjq6uCLpKywAekzPrE
95cIh1LYg6yV7nP+gH0DcgzZP4KM90f0GZNnQr8J953Sd4YnwZnR3yXHnPxz
8iywkZwW5PqBxBJfkm+Jfb6/5PSYl0feP+a7IvcKO5f0xL0=
      "]}, {Developer`PackedArrayForm, CompressedData["
1:eJwd2lMQGDyzANC/tm3btm3btq2vtm3btm3btu32nt7MnJk87Fsm2N0kaNiu
YtsA//vf/xqE+N//j3/zgAQiMEEISjCC8y8sJKEITRjCEo7wRCAikYhMFKIS
jejEICaxiE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN
7OQgJ7nITR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q
1KAmtahNHepSj/r/1oGGNKIxTWhKM5rTgpa0ojVtaEs72tOBjnSiM13oSje6
04Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxj
OjOYySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7
O9jJLnazh73sYz8HOMghDnOEoxzjOCc4ySlOc4aznOM8F7jIJS5zhatc4zo3
uMktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOFr3zjOz/4
yS9+84e//Nv8AQhIIAIThKAEIzghCEkoQhOGsIQjPBGISCQiE4WoRCM6MYhJ
LGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5yEku
cpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS1q
U4e61KM+DWhIIxrThKY0ozktaEkrWtOGfwd4O9rTgY50ojNd6Eo3utODnvSi
N334j770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMks
ZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvYyS52
s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJLW5z
h7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+MkvfvOH
v/y7+AMQkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5x
iUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJ
R34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalH
fRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg//0Zd+
9GcAAxnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYwl3nM
ZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZrawlW1sZwc72cVu9rCXfezn
AAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCVa1znBje5xW3ucJd73OcB
D3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/nFb/7wl3+P/gAE
JBCBCUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjEJBaxiUNc4hGfBCQk
EYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQkF7nJQ17ykZ8CFKQQ
hSlCUYpRnBKUpBSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtalDXepRnwY0pBGN
aUJTmtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70pBe96cN/9KUf/RnAQAYx
mCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGY
JSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgj
HOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc8
5RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85V/CH4CABCIwQQhK
MIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoy
kpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGK
U4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM5rT
gpa0ojVtaEs72tOBjnSiM13oSje604Oe9KI3ffiPvvSjPwMYyCAGM4ShDGM4
IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+C1jIIhazhKUsYzkr
WMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJLnazh73sYz8HOMghDnOEoxzjOCc4
ySlOc4aznOM8F7jIJS5zhatc4zo3uMktbnOHu9zjPg94yCMe84SnPOM5L3jJ
K17zhre84z0f+MgnPvOFr3zjOz/4yS9+84e//Cv2BSAggQhMEIISjOCEICSh
CE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalI
TRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSgIIUoTBGKUozilKAkpShN
GcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAhjWhME5rSjOa0oCWtaE0b
2tKO9nSgI53oTBe60o3u9KAnvehNH/6jL/3ozwAGMojBDGEowxjOCEYyitGM
YSzjGM8EJjKJyUxhKtOYzgxmMovZzGEu85jPAhayiMUsYSnLWM4KVrKK1axh
LetYzwY2sonNbGEr29jODnayi93sYS/72M8BDnKIwxzhKMc4zglOcorTnOEs
5zjPBS5yictc4SrXuM4NbnKL29zhLve4zwMe8ojHPOEpz3jOC17yite84S3v
eM8HPvKJz3zhK9/4zg9+8ovf/OEv/wr9AQhIIAIThKAEIzghCEkoQhOGsIQj
PBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9
GchIJjKThaxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwV
qEglKlOFqlSjOjWoSS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGtrSjPR3o
SCc604WudKM7PehJL3rTh//oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOB
iUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GN
bGIzW9jKNrazg53sYjd72Ms+9nOAgxziMEc4yjGOc4KTnOI0ZzjLOc5zgYtc
4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jKM57zgpe84jVveMs73vOBj3zi
M1/4yje+84Of/OI3f/jLvyZfAAISiMAEISjBCE4IQhKK0IQhLOEITwQiEonI
RCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxk
ISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylSh
KtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr
3ehOD3rSi9704T/60o/+DGAggxjMEIYyjOGMYCSjGM0YxjKO8UxgIpOYzBSm
Mo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatYzRrWso71bGAjm9jMFray
je3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5yjvNc4CKXuMwVrnKN
69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v
/OAnv/jNH/7yr8EfgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKIT
g5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spOD
nOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa
1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rTg570
ojd9+I++9KM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOYyCQmM4WpTGM6M5jJ
LGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72Mku
drOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMglLnOFq1zjOje4yS1u
c4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7P/jJL37z
h7/8+9wTgIAEIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKITg5jEIjZx
iEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKTgYxkIjNZyEo2spODnOQiN3nI
Sz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dahL
Perzf1Mxt3M=
      "], CompressedData["
1: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
Ynu1nif+A+iW534=
      "]}, {Automatic, Automatic}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.8723076243675675`*^9, 3.872322481137122*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"cc713576-ab0c-4983-9062-dfaa97a29c67"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Results", "Subsubsection",
 CellChangeTimes->{{3.8722908696022696`*^9, 
  3.8722908714203615`*^9}},ExpressionUUID->"1842b2df-35b9-48ce-a2d7-\
3cc3d7a24ad8"],

Cell["Shape Factor \[Lambda]", "Text",
 CellChangeTimes->{{3.8722911508137827`*^9, 3.87229120227197*^9}, {
  3.872293123332184*^9, 3.872293127109866*^9}, {3.8722932465470753`*^9, 
  3.8722932504888487`*^9}},ExpressionUUID->"a170898b-c705-4e4c-abbc-\
27f3e414f60d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[Lambda]", ",", "\[Beta]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hmax", "=", 
   RowBox[{"Quantity", "[", 
    RowBox[{"60", ",", "\"\<Meters\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", "=", 
   RowBox[{"ArcTan", "[", 
    RowBox[{"1", "/", "2.5"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bo", "=", 
   RowBox[{"Quantity", "[", 
    RowBox[{"10", ",", "\"\<Meters\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bo", "=", 
   RowBox[{"Quantity", "[", 
    RowBox[{"120", ",", "\"\<Meters\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Lambda]", "=", 
  RowBox[{
   RowBox[{"bo", "/", "Bo"}], "//", "N"}]}]}], "Input",
 CellChangeTimes->{{3.781368632044044*^9, 3.781368838527872*^9}, {
   3.7813710494425507`*^9, 3.781371144422723*^9}, {3.7813712161130466`*^9, 
   3.781371223100946*^9}, {3.7813724778328533`*^9, 3.7813725075126047`*^9}, {
   3.7813734026750717`*^9, 3.781373412000204*^9}, {3.781373458362577*^9, 
   3.7813734621048594`*^9}, {3.7813764262404423`*^9, 3.781376486538335*^9}, {
   3.781377152472477*^9, 3.781377155176055*^9}, 3.781869231832342*^9, 
   3.78186957919981*^9, {3.7818704198319483`*^9, 3.781870436268668*^9}, {
   3.781872934276519*^9, 3.78187297426152*^9}, 3.782119646198745*^9, {
   3.795880778471232*^9, 3.795880789146562*^9}, {3.795880844101893*^9, 
   3.795880881238998*^9}, {3.7958870826727552`*^9, 3.795887084754704*^9}, {
   3.795887142914337*^9, 3.7958871647267113`*^9}, {3.795887230249894*^9, 
   3.795887241016631*^9}, {3.7958901811787567`*^9, 3.795890181246715*^9}, {
   3.795898593183889*^9, 3.795898609580855*^9}, {3.795911069684417*^9, 
   3.795911075838895*^9}, {3.872293132063219*^9, 3.872293132159982*^9}, {
   3.872293202923747*^9, 3.87229322951134*^9}, {3.87229362055081*^9, 
   3.8722936568755665`*^9}, {3.872307466707426*^9, 3.872307467113762*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"cd1dc693-b56d-43c4-801e-59ae4147e0fb"],

Cell[BoxData["0.08333333333333333`"], "Output",
 CellChangeTimes->{
  3.78211971767522*^9, 3.782120481978112*^9, 3.7821205510586863`*^9, 
   3.78220654347857*^9, 3.782285822366724*^9, 3.782327137840601*^9, 
   3.782327377904215*^9, 3.782370918256296*^9, 3.782382220352992*^9, 
   3.782411197842111*^9, 3.78241632966671*^9, 3.782454346234064*^9, 
   3.782456597702869*^9, 3.782460830630476*^9, 3.782603777456769*^9, {
   3.7958808747601557`*^9, 3.7958808815709333`*^9}, 3.7958860956322803`*^9, 
   3.795887165884536*^9, 3.795887241516897*^9, {3.795898585026572*^9, 
   3.7958986103966846`*^9}, 3.79590290431277*^9, 3.795910687408414*^9, 
   3.795911077348472*^9, 3.795963330460908*^9, 3.7959655780029287`*^9, 
   3.795974269604981*^9, 3.795975356449358*^9, 3.79598510188901*^9, 
   3.795985496901834*^9, 3.79598557452287*^9, 3.796055995279448*^9, 
   3.7963988258417788`*^9, 3.796403438590797*^9, 3.7964039876075573`*^9, {
   3.8722932189320335`*^9, 3.87229323009702*^9}, {3.8722936293173895`*^9, 
   3.8722936589001036`*^9}, 3.872294555093112*^9, 3.872295936299328*^9, 
   3.8722980725611224`*^9, {3.8723076249331474`*^9, 3.872307631054009*^9}, 
   3.8723225296766825`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"d8041a49-055c-4de6-81a7-40cdfb76fc9b"]
}, Open  ]],

Cell["Homogeneity Factor (Gazetas 1985)", "Text",
 CellChangeTimes->{{3.872293255924758*^9, 3.8722932654372234`*^9}, {
  3.8722937266250157`*^9, 
  3.8722937412219353`*^9}},ExpressionUUID->"6e5a5106-5c35-4fc2-b33c-\
dda26baeb6af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mo", "=", "0.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.872293366756301*^9, 3.8722933694660497`*^9}, 
   3.8722936814718122`*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"06961eb0-038b-4eaf-9a89-d7a10cf821aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Vs", "=", 
  RowBox[{"Quantity", "[", 
   RowBox[{"325", ",", 
    RowBox[{"\"\<Meters\>\"", "/", "\"\<Seconds\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.872293445929182*^9, 3.872293461305211*^9}, {
  3.872293494576516*^9, 3.872293494882262*^9}, {3.8722935367831893`*^9, 
  3.8722935881782703`*^9}, {3.8722937901411304`*^9, 3.8722937906633472`*^9}, {
  3.872307727850334*^9, 3.8723077291663585`*^9}, {3.8723079579087152`*^9, 
  3.8723079710421267`*^9}, {3.872308001723317*^9, 3.872308001841272*^9}, {
  3.872308525737919*^9, 3.8723085260042458`*^9}, {3.8723085768893037`*^9, 
  3.872308631981033*^9}, {3.8723086816052356`*^9, 3.872308681684989*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"55e619fd-19f0-4075-8e2b-b974042bd99d"],

Cell[BoxData[
 TemplateBox[{"325", 
   RowBox[{
    "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
   "meters per second", 
   FractionBox["\"Meters\"", "\"Seconds\""]},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.8722936048623533`*^9, 3.8722937914224997`*^9, 3.8722945551230326`*^9, 
   3.872295936323262*^9, 3.8722980725890465`*^9, {3.8723076255279512`*^9, 
   3.872307631132553*^9}, 3.8723077300101886`*^9, {3.8723079596886644`*^9, 
   3.8723080023412066`*^9}, {3.8723084998952603`*^9, 
   3.8723085266951427`*^9}, {3.8723085776355267`*^9, 3.8723086322463503`*^9}, 
   3.8723086820083456`*^9, 3.8723225300115213`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"ed00cf6c-38df-4d7b-9315-725f65cd4535"]
}, Open  ]],

Cell["Cylinder roots  (3)", "Text",
 CellChangeTimes->{{3.8722930198427734`*^9, 3.8722930312677574`*^9}, {
  3.8722938731199265`*^9, 
  3.8722938817454796`*^9}},ExpressionUUID->"3b88505a-61ed-4116-858a-\
8294cb56c163"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"an", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"getCylinderFunctionRoots", "[", 
     RowBox[{"mo", ",", " ", "\[Lambda]", ",", " ", "n"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8722910572583685`*^9, 3.872291087600807*^9}, {
   3.8722912075670953`*^9, 3.872291247833118*^9}, {3.8722914325968227`*^9, 
   3.872291433376583*^9}, {3.8722914696881266`*^9, 3.872291470049589*^9}, {
   3.8722917286507907`*^9, 3.8722917291041403`*^9}, {3.8722923964024763`*^9, 
   3.8722924149224567`*^9}, {3.872292552680253*^9, 3.8722925613892317`*^9}, {
   3.8722927570419407`*^9, 3.872292758289141*^9}, {3.8722930025326676`*^9, 
   3.8722930144612803`*^9}, 3.8722933641570854`*^9, 3.87229368474387*^9, {
   3.872293895363236*^9, 3.872294021276465*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"af75495f-e8a9-4af6-b66a-e61456ad31b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.952883930858088`", ",", "6.314581496499346`", ",", "9.82849360714543`"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.8722933787699375`*^9, {3.8722936668003078`*^9, 3.8722936920637217`*^9}, {
   3.872293947578543*^9, 3.872293970957613*^9}, {3.872294008536671*^9, 
   3.872294022605564*^9}, 3.872294591646571*^9, 3.8722948071635103`*^9, 
   3.8722959363445053`*^9, 3.872298072608994*^9, {3.8723076255506563`*^9, 
   3.8723076311585712`*^9}, 3.8723085034749575`*^9, 3.872308582839997*^9, 
   3.8723225300304985`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"a726cd75-74b3-44d4-9908-8e15f7a8c218"]
}, Open  ]],

Cell["Fundamental Period of the TSF", "Text",
 CellChangeTimes->{{3.795881329640544*^9, 
  3.7958813351057*^9}},ExpressionUUID->"789a8934-28d2-4f33-a9d6-ecb88f2acced"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Td", "=", 
  RowBox[{"4", "*", "Pi", "*", 
   RowBox[{"Hmax", "/", 
    RowBox[{"(", 
     RowBox[{"an", "*", 
      RowBox[{"(", 
       RowBox[{"2", "-", "mo"}], ")"}], "*", "Vs"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7958813950850554`*^9, 3.795881395154351*^9}, {
  3.795963527496399*^9, 3.7959635310642023`*^9}, {3.79596484072626*^9, 
  3.795964841982999*^9}, {3.8722939122765646`*^9, 3.872293913857245*^9}, {
  3.872294038645726*^9, 3.8722940394754033`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"9f3ec2c4-f7ba-4f3d-b2c2-8168e54ef913"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"0.5237693948268904`", "\"s\"", "seconds", "\"Seconds\""},
    "Quantity"], ",", 
   TemplateBox[{"0.24492996571776063`", "\"s\"", "seconds", "\"Seconds\""},
    "Quantity"], ",", 
   TemplateBox[{"0.15736187978340566`", "\"s\"", "seconds", "\"Seconds\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.795881323803953*^9, 3.795881400751626*^9, 3.795886149294763*^9, 
   3.795886203660159*^9, 3.795902904494467*^9, 3.7959124730047197`*^9, 
   3.795915629084484*^9, 3.7959633863038263`*^9, 3.795963442134796*^9, 
   3.795963495974032*^9, 3.795963532099985*^9, 3.795964012034788*^9, 
   3.795964842847217*^9, 3.7959656256419353`*^9, 3.795975316862266*^9, {
   3.795975364576993*^9, 3.795975371422261*^9}, 3.79597559348626*^9, 
   3.795983010600415*^9, 3.7959851402698603`*^9, 3.795985532835972*^9, 
   3.795985610579883*^9, 3.796056028311863*^9, 3.796398862708778*^9, 
   3.796403661230092*^9, 3.796404143743856*^9, {3.8722936736349325`*^9, 
   3.872293694461178*^9}, 3.872293798629796*^9, 3.872294041899889*^9, 
   3.872294591726629*^9, 3.8722959363643456`*^9, 3.8722980726269436`*^9, {
   3.8723076255701847`*^9, 3.8723076311817923`*^9}, 3.8723077353762946`*^9, 
   3.87230796531246*^9, 3.8723079966645164`*^9, 3.8723085064104347`*^9, 
   3.8723085488969593`*^9, {3.8723085834187746`*^9, 3.872308654447569*^9}, 
   3.8723087066913786`*^9, 3.8723225300488424`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"74c14da5-b268-4b87-9e47-c6328cc70397"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Td", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "/", 
  RowBox[{"Td", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.872294045217594*^9, 3.87229406688378*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"dff0418c-1390-4848-8695-2bd6ec8140ed"],

Cell[BoxData["2.1384455482692712`"], "Output",
 CellChangeTimes->{{3.8722940546018915`*^9, 3.872294067846057*^9}, 
   3.872294591736602*^9, 3.8722959363842926`*^9, 3.872298072647888*^9, {
   3.8723076255924854`*^9, 3.872307631203272*^9}, 3.8723225300563436`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"370e73f3-48c6-4583-a1e7-d32f95f2ba7c"]
}, Open  ]],

Cell["\<\
Second mode 2.3 times first mode. SDOF assumption stills valid\
\>", "Text",
 CellChangeTimes->{{3.8722940708158665`*^9, 
  3.872294102140108*^9}},ExpressionUUID->"890f0683-a97c-49b9-a5ad-\
68119d0cc7a5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Tables", "Subsubsection",
 CellChangeTimes->{{3.872294225344598*^9, 
  3.8722942309217215`*^9}},ExpressionUUID->"d9aeccd9-4b57-468e-9ddc-\
397aa3ca03af"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$DataFolder", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<data\>\""}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "$DataFolder", "]"}], ";"}]}], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"2cbee640-3094-45a0-b6f2-a673a2e96433"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "DT", "]"}], ";", 
  RowBox[{
   RowBox[{"DT", "[", "n_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "m", ",", "\[Lambda]", ",", 
       RowBox[{"getCylinderFunctionRoots", "[", 
        RowBox[{"m", ",", " ", "\[Lambda]", ",", " ", "n"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "0.0", ",", "0.95", ",", "0.005"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", " ", "0", ",", " ", 
       RowBox[{"1", " ", "/", " ", "2"}], ",", " ", "0.0025"}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.872299643375489*^9, 3.8722996932651978`*^9}, {
   3.8722997250573983`*^9, 3.8722997267881756`*^9}, {3.8722997934789133`*^9, 
   3.872299820776472*^9}, {3.8722998861960087`*^9, 3.872299888574089*^9}, {
   3.8722999618533955`*^9, 3.872299993813197*^9}, {3.872300026816944*^9, 
   3.872300029007413*^9}, {3.8723000676526775`*^9, 3.872300068027102*^9}, 
   3.872300527445382*^9, {3.8723017118311095`*^9, 3.872301731240141*^9}, {
   3.8723018087964497`*^9, 3.8723018335662017`*^9}, {3.872301896162303*^9, 
   3.872301952548436*^9}, {3.872302000008026*^9, 3.872302001763895*^9}, {
   3.8723020700607977`*^9, 3.8723020842554493`*^9}, {3.8723225465791993`*^9, 
   3.8723225466677303`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"aa5435aa-336f-4457-a61b-55e124509bd3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"\"\<roots_\>\"", "<>", 
      RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<.csv\>\""}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"DT", "[", "n", "]"}], ",", "1"}], "]"}], ",", 
     RowBox[{"TableHeadings", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<n\>\"", ",", "\"\<m\>\"", ",", "\"\<l\>\"", ",", "\"\<an\>\""}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872306119650165*^9, 3.8723061286686196`*^9}, {
  3.8723061882894354`*^9, 3.8723062151468678`*^9}, {3.8723062542886114`*^9, 
  3.8723062583624077`*^9}, {3.872306293809809*^9, 3.872306295840664*^9}, {
  3.87232263024308*^9, 3.872322636892701*^9}, {3.872322673766686*^9, 
  3.8723226744207106`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"cc88dc2e-8f2e-4515-bae2-bfce1c89aad3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"roots_1.csv\"\>", ",", "\<\"roots_2.csv\"\>", 
   ",", "\<\"roots_3.csv\"\>", ",", "\<\"roots_4.csv\"\>", 
   ",", "\<\"roots_5.csv\"\>", ",", "\<\"roots_6.csv\"\>", 
   ",", "\<\"roots_7.csv\"\>", ",", "\<\"roots_8.csv\"\>", 
   ",", "\<\"roots_9.csv\"\>", ",", "\<\"roots_10.csv\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8723063296841125`*^9, 3.87232260903412*^9, 
  3.8723227026627817`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"eb935911-f6de-4b9b-877f-d7826609e6db"]
}, Open  ]]
}, Closed]]
},
WindowSize->{1141.2, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b072465c-364f-4646-a614-56566adb6491"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 106, 0, 45, "Subsubsection",ExpressionUUID->"cb6bf3fb-70de-4521-9a14-d9e1ec5f8cb3"],
Cell[689, 24, 431, 10, 50, "Code",ExpressionUUID->"3c890184-f4a1-4802-b43e-eadddc4c521f"],
Cell[1123, 36, 723, 18, 67, "Input",ExpressionUUID->"02ff297b-f86e-4701-a52a-d15772083f40"],
Cell[1849, 56, 297, 7, 68, "Code",ExpressionUUID->"1bb98857-7a76-42f3-bd04-083915d1a8d7"],
Cell[2149, 65, 1718, 41, 173, "Code",ExpressionUUID->"b9301123-d22e-4764-9949-2857da0934a8"],
Cell[3870, 108, 1053, 27, 86, "Code",ExpressionUUID->"2ccf354c-72bf-42a0-8812-e07831116f86"],
Cell[4926, 137, 1891, 46, 173, "Code",ExpressionUUID->"8850e745-28f1-405e-8185-c31a4c4522eb"],
Cell[6820, 185, 52503, 1211, 2790, "Code",ExpressionUUID->"0f027793-21cc-4f03-a345-5fb2372a0917"],
Cell[59326, 1398, 197, 2, 52, "Code",ExpressionUUID->"7bb9c075-cf89-4710-abd6-bbe5f5ef1d15"],
Cell[CellGroupData[{
Cell[59548, 1404, 217, 3, 28, "Input",ExpressionUUID->"5130c6b6-96cd-4751-b988-0c86ae33b7f7"],
Cell[59768, 1409, 379, 9, 75, "Print",ExpressionUUID->"7ade383f-4384-454e-8690-73e6dada12d2"],
Cell[60150, 1420, 312801, 5440, 237, "Output",ExpressionUUID->"cc713576-ab0c-4983-9062-dfaa97a29c67"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[373000, 6866, 162, 3, 37, "Subsubsection",ExpressionUUID->"1842b2df-35b9-48ce-a2d7-3cc3d7a24ad8"],
Cell[373165, 6871, 264, 4, 35, "Text",ExpressionUUID->"a170898b-c705-4e4c-abbc-27f3e414f60d"],
Cell[CellGroupData[{
Cell[373454, 6879, 2060, 42, 124, "Input",ExpressionUUID->"cd1dc693-b56d-43c4-801e-59ae4147e0fb"],
Cell[375517, 6923, 1252, 18, 32, "Output",ExpressionUUID->"d8041a49-055c-4de6-81a7-40cdfb76fc9b"]
}, Open  ]],
Cell[376784, 6944, 230, 4, 35, "Text",ExpressionUUID->"6e5a5106-5c35-4fc2-b33c-dda26baeb6af"],
Cell[377017, 6950, 245, 5, 28, "Input",ExpressionUUID->"06961eb0-038b-4eaf-9a89-d7a10cf821aa"],
Cell[CellGroupData[{
Cell[377287, 6959, 760, 12, 28, "Input",ExpressionUUID->"55e619fd-19f0-4075-8e2b-b974042bd99d"],
Cell[378050, 6973, 730, 14, 39, "Output",ExpressionUUID->"ed00cf6c-38df-4d7b-9315-725f65cd4535"]
}, Open  ]],
Cell[378795, 6990, 218, 4, 35, "Text",ExpressionUUID->"3b88505a-61ed-4116-858a-8294cb56c163"],
Cell[CellGroupData[{
Cell[379038, 6998, 921, 16, 28, "Input",ExpressionUUID->"af75495f-e8a9-4af6-b66a-e61456ad31b1"],
Cell[379962, 7016, 639, 12, 32, "Output",ExpressionUUID->"a726cd75-74b3-44d4-9908-8e15f7a8c218"]
}, Open  ]],
Cell[380616, 7031, 167, 2, 35, "Text",ExpressionUUID->"789a8934-28d2-4f33-a9d6-ecb88f2acced"],
Cell[CellGroupData[{
Cell[380808, 7037, 575, 12, 28, "Input",ExpressionUUID->"9f3ec2c4-f7ba-4f3d-b2c2-8168e54ef913"],
Cell[381386, 7051, 1513, 25, 41, "Output",ExpressionUUID->"74c14da5-b268-4b87-9e47-c6328cc70397"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382936, 7081, 299, 7, 28, "Input",ExpressionUUID->"dff0418c-1390-4848-8695-2bd6ec8140ed"],
Cell[383238, 7090, 341, 4, 32, "Output",ExpressionUUID->"370e73f3-48c6-4583-a1e7-d32f95f2ba7c"]
}, Open  ]],
Cell[383594, 7097, 214, 5, 35, "Text",ExpressionUUID->"890f0683-a97c-49b9-a5ad-68119d0cc7a5"]
}, Closed]],
Cell[CellGroupData[{
Cell[383845, 7107, 159, 3, 37, "Subsubsection",ExpressionUUID->"d9aeccd9-4b57-468e-9ddc-397aa3ca03af"],
Cell[384007, 7112, 402, 10, 48, "Input",ExpressionUUID->"2cbee640-3094-45a0-b6f2-a673a2e96433"],
Cell[384412, 7124, 1414, 28, 28, "Input",ExpressionUUID->"aa5435aa-336f-4457-a61b-55e124509bd3"],
Cell[CellGroupData[{
Cell[385851, 7156, 970, 22, 28, "Input",ExpressionUUID->"cc88dc2e-8f2e-4515-bae2-bfce1c89aad3"],
Cell[386824, 7180, 521, 9, 32, "Output",ExpressionUUID->"eb935911-f6de-4b9b-877f-d7826609e6db"]
}, Open  ]]
}, Closed]]
}
]
*)

